// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StormyCommerce.Infraestructure.Data;

namespace SimplCommerce.WebHost.Migrations
{
    [DbContext(typeof(StormyDbContext))]
    [Migration("20190909012150_seed")]
    partial class seed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Catalog.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(450);

                    b.Property<int>("DisplayOrder");

                    b.Property<bool>("IncludeInMenu");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPublished");

                    b.Property<DateTimeOffset>("LastModified");

                    b.Property<string>("MetaDescription");

                    b.Property<string>("MetaKeywords")
                        .HasMaxLength(450);

                    b.Property<string>("MetaTitle")
                        .HasMaxLength(450);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(450);

                    b.Property<long?>("ParentId");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(450);

                    b.Property<string>("ThumbnailImageUrl");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "Illum nihil laboriosam iste. Incidunt dolorem sapiente dicta architecto in iure possimus qui. Voluptas voluptas distinctio possimus voluptates. Laudantium eius eaque nesciunt alias dolore ipsam. Omnis veniam ea quia repellendus labore aut dolor doloribus.",
                            DisplayOrder = 0,
                            IncludeInMenu = true,
                            IsDeleted = false,
                            IsPublished = true,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 16, 11, 43, 45, 542, DateTimeKind.Unspecified).AddTicks(191), new TimeSpan(0, -3, 0, 0, 0)),
                            MetaDescription = @"Quia qui excepturi id ut deserunt amet voluptate asperiores blanditiis.
Vitae optio et ex atque.
In dolor voluptatibus molestias eos.
Temporibus eius dolor aut culpa incidunt officia.
Ab explicabo sit quis debitis.",
                            Name = "Grocery",
                            Slug = "impedit-iusto-amet",
                            ThumbnailImageUrl = "http://lorempixel.com/640/480/fashion"
                        },
                        new
                        {
                            Id = 2L,
                            Description = "Ut ad molestias. Aut dolorum debitis deserunt. Cum eum quasi ab est eum temporibus dolorum id. Voluptate sed voluptatem doloribus. Veniam deleniti omnis et non quis et mollitia. Iusto qui rerum libero voluptas.",
                            DisplayOrder = 1,
                            IncludeInMenu = true,
                            IsDeleted = false,
                            IsPublished = true,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 7, 10, 26, 14, 0, DateTimeKind.Unspecified).AddTicks(1192), new TimeSpan(0, -3, 0, 0, 0)),
                            MetaDescription = @"Maxime modi esse quidem ullam eum maiores ab.
Autem praesentium minus nihil reiciendis nihil.
Eum pariatur ea nulla perferendis.
Praesentium possimus repellendus possimus laborum ut.
Sed omnis ut error optio quis.",
                            Name = "Industrial",
                            Slug = "ipsa-sunt-quae",
                            ThumbnailImageUrl = "http://lorempixel.com/640/480/fashion"
                        },
                        new
                        {
                            Id = 3L,
                            Description = "Culpa praesentium eos necessitatibus blanditiis fugit expedita voluptas doloribus. Voluptas optio commodi voluptas distinctio. Perspiciatis numquam vitae est minima perferendis iste ipsum est. Nam porro repellendus accusamus placeat illo velit. Debitis exercitationem et accusamus nesciunt temporibus dolor. Temporibus id et alias aut.",
                            DisplayOrder = 2,
                            IncludeInMenu = true,
                            IsDeleted = false,
                            IsPublished = true,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 24, 7, 9, 38, 302, DateTimeKind.Unspecified).AddTicks(2788), new TimeSpan(0, -3, 0, 0, 0)),
                            MetaDescription = "Adipisci odio iusto quo quia provident error et eligendi neque.",
                            Name = "Movies",
                            Slug = "pariatur-qui-earum",
                            ThumbnailImageUrl = "http://lorempixel.com/640/480/fashion"
                        },
                        new
                        {
                            Id = 4L,
                            Description = @"Quibusdam rerum commodi molestiae tempore illo.
Eum alias modi tenetur consequatur.
Animi iure et officia et enim nisi doloribus.
Ipsam reprehenderit tempora.
Nemo suscipit quo modi libero inventore dicta quas.",
                            DisplayOrder = 3,
                            IncludeInMenu = true,
                            IsDeleted = false,
                            IsPublished = true,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 6, 1, 3, 53, 372, DateTimeKind.Unspecified).AddTicks(9096), new TimeSpan(0, -3, 0, 0, 0)),
                            MetaDescription = "reprehenderit",
                            Name = "Tools",
                            Slug = "unde-enim-voluptas",
                            ThumbnailImageUrl = "http://lorempixel.com/640/480/fashion"
                        },
                        new
                        {
                            Id = 5L,
                            Description = "Laboriosam tenetur voluptas odio magnam veritatis qui.",
                            DisplayOrder = 4,
                            IncludeInMenu = true,
                            IsDeleted = false,
                            IsPublished = true,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 29, 21, 48, 15, 802, DateTimeKind.Unspecified).AddTicks(8451), new TimeSpan(0, -3, 0, 0, 0)),
                            MetaDescription = "Ut quis molestias omnis sunt aut optio delectus.",
                            Name = "Jewelery",
                            Slug = "placeat-a-doloribus",
                            ThumbnailImageUrl = "http://lorempixel.com/640/480/fashion"
                        },
                        new
                        {
                            Id = 6L,
                            Description = "Iure repellat magnam ipsam. Recusandae molestiae laborum quas aut iusto ut voluptatem. Enim optio possimus. Qui porro repellat qui illum in in quibusdam harum praesentium.",
                            DisplayOrder = 5,
                            IncludeInMenu = true,
                            IsDeleted = false,
                            IsPublished = true,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 26, 13, 36, 55, 715, DateTimeKind.Unspecified).AddTicks(4360), new TimeSpan(0, -3, 0, 0, 0)),
                            MetaDescription = "Repellendus inventore ipsa modi et et necessitatibus voluptatem voluptatem.",
                            Name = "Computers",
                            Slug = "corporis-ducimus-saepe",
                            ThumbnailImageUrl = "http://lorempixel.com/640/480/fashion"
                        },
                        new
                        {
                            Id = 7L,
                            Description = @"Eligendi nobis nostrum voluptatem in architecto similique modi.
Dolor cum quod accusamus ullam laudantium modi facere amet vel.
Ipsa adipisci quia consequatur est a occaecati ut aut.
Eius ipsa dolor explicabo.
Est aspernatur minus quia maiores voluptatum repellat non rerum numquam.",
                            DisplayOrder = 6,
                            IncludeInMenu = true,
                            IsDeleted = false,
                            IsPublished = true,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 25, 13, 14, 14, 981, DateTimeKind.Unspecified).AddTicks(5474), new TimeSpan(0, -3, 0, 0, 0)),
                            MetaDescription = "Consequatur voluptatibus libero quas.",
                            Name = "Baby",
                            Slug = "velit-nesciunt-recusandae",
                            ThumbnailImageUrl = "http://lorempixel.com/640/480/fashion"
                        },
                        new
                        {
                            Id = 8L,
                            Description = "Esse dolorum iste ullam sed quod.",
                            DisplayOrder = 7,
                            IncludeInMenu = true,
                            IsDeleted = false,
                            IsPublished = true,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 27, 23, 43, 30, 73, DateTimeKind.Unspecified).AddTicks(7808), new TimeSpan(0, -3, 0, 0, 0)),
                            MetaDescription = "Est ex est consequuntur voluptatem voluptatibus reprehenderit eum ipsa voluptatem. Mollitia velit et sint veniam. Est consequatur aut pariatur iusto dignissimos. Et voluptatem qui et dolor. Amet molestiae culpa ducimus eum est exercitationem ut atque molestiae.",
                            Name = "Computers",
                            Slug = "voluptas-omnis-et",
                            ThumbnailImageUrl = "http://lorempixel.com/640/480/fashion"
                        },
                        new
                        {
                            Id = 9L,
                            Description = "Eaque perferendis soluta ab voluptatem placeat fugit suscipit voluptates. Excepturi cumque qui sapiente quia neque. Reprehenderit perferendis facere.",
                            DisplayOrder = 8,
                            IncludeInMenu = true,
                            IsDeleted = false,
                            IsPublished = true,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 5, 1, 45, 58, 522, DateTimeKind.Unspecified).AddTicks(7152), new TimeSpan(0, -3, 0, 0, 0)),
                            MetaDescription = "Doloribus eveniet quia vel sed ullam illum non dolores.",
                            Name = "Tools",
                            Slug = "est-odit-assumenda",
                            ThumbnailImageUrl = "http://lorempixel.com/640/480/fashion"
                        },
                        new
                        {
                            Id = 10L,
                            Description = "eos",
                            DisplayOrder = 9,
                            IncludeInMenu = true,
                            IsDeleted = false,
                            IsPublished = true,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 5, 0, 23, 30, 376, DateTimeKind.Unspecified).AddTicks(2541), new TimeSpan(0, -3, 0, 0, 0)),
                            MetaDescription = "Quae id eveniet accusantium dolor. Et nisi blanditiis. Assumenda officiis praesentium in. Voluptatem repellendus nulla assumenda. Illum occaecati cumque quaerat repellendus mollitia et sunt. Sapiente itaque et.",
                            Name = "Music",
                            Slug = "sit-quam-quis",
                            ThumbnailImageUrl = "http://lorempixel.com/640/480/fashion"
                        });
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Catalog.Product.Brand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset>("LastModified");

                    b.Property<string>("LogoImage");

                    b.Property<string>("Name");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(450);

                    b.Property<string>("Website");

                    b.HasKey("Id");

                    b.ToTable("Brand");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "est",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 23, 2, 49, 14, 126, DateTimeKind.Unspecified).AddTicks(6944), new TimeSpan(0, -3, 0, 0, 0)),
                            LogoImage = "https://picsum.photos/640/480/?image=209",
                            Name = "Franco - Reis",
                            Slug = "labore-et-ab",
                            Website = "rafael.br"
                        },
                        new
                        {
                            Id = 2L,
                            Description = "Ea odit magni facilis assumenda qui itaque sed.",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 29, 1, 9, 6, 62, DateTimeKind.Unspecified).AddTicks(2193), new TimeSpan(0, -3, 0, 0, 0)),
                            LogoImage = "https://picsum.photos/640/480/?image=880",
                            Name = "Souza, Silva and Silva",
                            Slug = "laudantium-quas-tempora",
                            Website = "vitória.br"
                        },
                        new
                        {
                            Id = 3L,
                            Description = "Totam sunt aliquid laudantium et aut magnam possimus quasi non.",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 5, 7, 38, 25, 41, DateTimeKind.Unspecified).AddTicks(5917), new TimeSpan(0, -3, 0, 0, 0)),
                            LogoImage = "https://picsum.photos/640/480/?image=39",
                            Name = "Santos, Santos and Barros",
                            Slug = "aut-sint-ea",
                            Website = "janaína.org"
                        },
                        new
                        {
                            Id = 4L,
                            Description = "omnis",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 21, 8, 14, 13, 444, DateTimeKind.Unspecified).AddTicks(2723), new TimeSpan(0, -3, 0, 0, 0)),
                            LogoImage = "https://picsum.photos/640/480/?image=1038",
                            Name = "Nogueira - Oliveira",
                            Slug = "sed-sunt-porro",
                            Website = "maria.info"
                        },
                        new
                        {
                            Id = 5L,
                            Description = "Sed dolores voluptates perspiciatis. Ab voluptates aut. Eius rerum perferendis nemo exercitationem ut commodi eos ipsum. Aut quos et magni eius ullam et.",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 8, 2, 35, 42, 687, DateTimeKind.Unspecified).AddTicks(9948), new TimeSpan(0, -3, 0, 0, 0)),
                            LogoImage = "https://picsum.photos/640/480/?image=450",
                            Name = "Carvalho e Associados",
                            Slug = "consectetur-in-ab",
                            Website = "marli.info"
                        },
                        new
                        {
                            Id = 6L,
                            Description = "quo",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 28, 9, 4, 26, 618, DateTimeKind.Unspecified).AddTicks(3801), new TimeSpan(0, -3, 0, 0, 0)),
                            LogoImage = "https://picsum.photos/640/480/?image=932",
                            Name = "Saraiva LTDA",
                            Slug = "fugiat-consequuntur-aut",
                            Website = "félix.biz"
                        },
                        new
                        {
                            Id = 7L,
                            Description = "Et eaque ducimus saepe dolore fugiat ad dicta beatae. Labore non molestiae voluptatem velit incidunt. Quod ex explicabo maxime ut velit modi. Sit voluptatem dolores consequatur.",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 20, 17, 26, 4, 291, DateTimeKind.Unspecified).AddTicks(2544), new TimeSpan(0, -3, 0, 0, 0)),
                            LogoImage = "https://picsum.photos/640/480/?image=636",
                            Name = "Batista e Associados",
                            Slug = "dolorem-quas-harum",
                            Website = "roberta.name"
                        },
                        new
                        {
                            Id = 8L,
                            Description = "Et ex aliquam iure ea commodi earum nesciunt sequi et. Maxime delectus quos voluptatibus nisi at voluptates ducimus assumenda et. Ipsam praesentium qui velit. Nesciunt dolorem atque perferendis voluptatum asperiores commodi aut odio sed. Enim incidunt est. Asperiores cupiditate autem quis est qui aspernatur facere voluptate.",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 22, 7, 53, 16, 728, DateTimeKind.Unspecified).AddTicks(3401), new TimeSpan(0, -3, 0, 0, 0)),
                            LogoImage = "https://picsum.photos/640/480/?image=917",
                            Name = "Nogueira S.A.",
                            Slug = "ipsa-eos-dolores",
                            Website = "paulo.name"
                        },
                        new
                        {
                            Id = 9L,
                            Description = "Enim aperiam qui ut sed occaecati molestiae sit perspiciatis consequatur. Magni alias quam necessitatibus quas perspiciatis esse illum aut. Suscipit voluptate voluptatem laborum sint totam iusto quia incidunt. Qui id fuga qui quia esse fuga praesentium.",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 29, 23, 22, 44, 973, DateTimeKind.Unspecified).AddTicks(5624), new TimeSpan(0, -3, 0, 0, 0)),
                            LogoImage = "https://picsum.photos/640/480/?image=438",
                            Name = "Silva LTDA",
                            Slug = "ipsa-quibusdam-error",
                            Website = "mércia.name"
                        },
                        new
                        {
                            Id = 10L,
                            Description = "Aliquid aliquam inventore qui suscipit quaerat velit. Perferendis inventore aut sint unde reprehenderit saepe porro ipsum. Qui sit ex ut consequatur quod omnis dolor.",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 2, 17, 37, 32, 285, DateTimeKind.Unspecified).AddTicks(4614), new TimeSpan(0, -3, 0, 0, 0)),
                            LogoImage = "https://picsum.photos/640/480/?image=826",
                            Name = "Batista, Braga and Barros",
                            Slug = "culpa-accusantium-tempora",
                            Website = "morgana.org"
                        });
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Catalog.Product.ProductAttribute", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("GroupId");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset>("LastModified");

                    b.Property<string>("Name");

                    b.Property<long?>("StormyProductId");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("StormyProductId");

                    b.ToTable("ProductAttribute");
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Catalog.Product.ProductAttributeGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset>("LastModified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.ToTable("ProductAttributeGroup");
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Catalog.Product.ProductAttributeValue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("AttributeId");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset>("LastModified");

                    b.Property<long>("ProductId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAttributeValue");
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Catalog.Product.ProductLink", b =>
                {
                    b.Property<long>("Id");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset>("LastModified");

                    b.Property<int>("LinkType");

                    b.Property<long>("LinkedProductId");

                    b.Property<long>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("LinkedProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductLink");
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Catalog.Product.ProductOption", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset>("LastModified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.ToTable("ProductOption");
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Catalog.Product.ProductOptionValue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DisplayType")
                        .HasMaxLength(450);

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset>("LastModified");

                    b.Property<long>("OptionId");

                    b.Property<long>("ProductId");

                    b.Property<int>("SortIndex");

                    b.Property<string>("Value")
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.HasIndex("OptionId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductOptionValue");
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Catalog.Product.ProductTemplate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset>("LastModified");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ProductTemplate");
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Catalog.Product.ProductTemplateProductAttribute", b =>
                {
                    b.Property<long>("ProductTemplateId");

                    b.Property<long>("ProductAttributeId");

                    b.HasKey("ProductTemplateId", "ProductAttributeId");

                    b.HasIndex("ProductAttributeId");

                    b.ToTable("ProductTemplateProductAttribute");
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Catalog.Product.StormyProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AllowCustomerReview");

                    b.Property<int>("ApprovedRatingSum");

                    b.Property<int>("ApprovedTotalReviews");

                    b.Property<bool>("AvailableForPreorder");

                    b.Property<long>("BrandId");

                    b.Property<long>("CategoryId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<decimal>("Discount");

                    b.Property<bool>("DiscountAvailable");

                    b.Property<bool>("HasDiscountApplied");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset>("LastModified");

                    b.Property<long>("MediaId");

                    b.Property<int>("NotApprovedRatingSum");

                    b.Property<int>("NotApprovedTotalReviews");

                    b.Property<bool>("NotReturnable");

                    b.Property<string>("Note");

                    b.Property<string>("OldPrice");

                    b.Property<DateTime?>("PreOrderAvailabilityStartDate");

                    b.Property<string>("Price");

                    b.Property<bool>("ProductAvailable");

                    b.Property<decimal>("ProductCost");

                    b.Property<long>("ProductLinksId");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(400);

                    b.Property<bool>("Published");

                    b.Property<int>("QuantityPerUnity");

                    b.Property<int>("Ranking");

                    b.Property<string>("SKU")
                        .IsRequired();

                    b.Property<string>("Slug");

                    b.Property<string>("Status")
                        .IsRequired();

                    b.Property<bool>("StockTrackingIsEnabled");

                    b.Property<string>("ThumbnailImage");

                    b.Property<string>("TypeName")
                        .IsRequired();

                    b.Property<decimal>("UnitPrice");

                    b.Property<decimal>("UnitSize");

                    b.Property<double>("UnitWeight");

                    b.Property<int>("UnitsInStock");

                    b.Property<int>("UnitsOnOrder");

                    b.Property<DateTime>("UpdatedOnUtc");

                    b.Property<long>("VendorId");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId")
                        .IsUnique();

                    b.HasIndex("VendorId");

                    b.ToTable("StormyProduct");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 1L,
                            CategoryId = 1L,
                            CreatedAt = new DateTime(2018, 10, 4, 16, 39, 33, 207, DateTimeKind.Local).AddTicks(9385),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 906, DateTimeKind.Unspecified).AddTicks(6303), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 1L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "est",
                            OldPrice = "R$7,24",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 1, 2, 5, 56, 29, 546, DateTimeKind.Local).AddTicks(5964),
                            Price = "R$4,77",
                            ProductAvailable = true,
                            ProductCost = 0.04347067002368660m,
                            ProductLinksId = 0L,
                            ProductName = "Ergonomic Fresh Table",
                            Published = true,
                            QuantityPerUnity = 18,
                            Ranking = 1,
                            SKU = "cbyd2dund75ea07i",
                            Slug = "non-eaque-quidem",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Computers",
                            UnitPrice = 23.0859608962601000m,
                            UnitSize = 4.0319945449158500m,
                            UnitWeight = 0.30094694220505047,
                            UnitsInStock = 5,
                            UnitsOnOrder = 2,
                            UpdatedOnUtc = new DateTime(2019, 9, 8, 13, 52, 41, 757, DateTimeKind.Local).AddTicks(8425),
                            VendorId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 2L,
                            CategoryId = 2L,
                            CreatedAt = new DateTime(2019, 1, 13, 3, 3, 20, 801, DateTimeKind.Local).AddTicks(5271),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 917, DateTimeKind.Unspecified).AddTicks(4756), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 2L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "quos",
                            OldPrice = "R$117,68",
                            PreOrderAvailabilityStartDate = new DateTime(2019, 12, 30, 23, 39, 4, 811, DateTimeKind.Local).AddTicks(4771),
                            Price = "R$87,32",
                            ProductAvailable = true,
                            ProductCost = 0.8837425079586650m,
                            ProductLinksId = 0L,
                            ProductName = "Refined Wooden Tuna",
                            Published = true,
                            QuantityPerUnity = 84,
                            Ranking = 2,
                            SKU = "wxy9cwjnlzwu3gm8",
                            Slug = "rerum-dicta-et",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Outdoors",
                            UnitPrice = 16.2922104430814000m,
                            UnitSize = 2.1128529226932900m,
                            UnitWeight = 0.60742099937397098,
                            UnitsInStock = 3,
                            UnitsOnOrder = 1,
                            UpdatedOnUtc = new DateTime(2019, 9, 9, 3, 4, 58, 9, DateTimeKind.Local).AddTicks(5999),
                            VendorId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 3L,
                            CategoryId = 3L,
                            CreatedAt = new DateTime(2019, 3, 3, 9, 53, 57, 951, DateTimeKind.Local).AddTicks(8916),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 917, DateTimeKind.Unspecified).AddTicks(5724), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 3L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = @"Et quia aliquam.
Enim libero blanditiis rem nesciunt modi id sed est odit.
Dignissimos dicta officia inventore ut necessitatibus modi cumque.",
                            OldPrice = "R$176,56",
                            PreOrderAvailabilityStartDate = new DateTime(2019, 12, 11, 7, 1, 30, 73, DateTimeKind.Local).AddTicks(5570),
                            Price = "R$71,02",
                            ProductAvailable = true,
                            ProductCost = 0.7951030809409460m,
                            ProductLinksId = 0L,
                            ProductName = "Intelligent Wooden Salad",
                            Published = true,
                            QuantityPerUnity = 78,
                            Ranking = 3,
                            SKU = "exkjp46yha6h87as",
                            Slug = "nobis-assumenda-nisi",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Automotive",
                            UnitPrice = 10.118744853008000m,
                            UnitSize = 0.25107908074328600m,
                            UnitWeight = 0.24961629009322089,
                            UnitsInStock = 5,
                            UnitsOnOrder = 6,
                            UpdatedOnUtc = new DateTime(2019, 9, 9, 9, 8, 58, 703, DateTimeKind.Local).AddTicks(265),
                            VendorId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 4L,
                            CategoryId = 4L,
                            CreatedAt = new DateTime(2019, 2, 12, 12, 0, 46, 915, DateTimeKind.Local).AddTicks(8280),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 917, DateTimeKind.Unspecified).AddTicks(6234), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 4L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "Delectus reiciendis tempora excepturi iusto harum. Minus illo eaque tempora sit laudantium. Facere accusantium impedit animi nesciunt beatae voluptatem ratione. Adipisci inventore explicabo. Velit corporis veritatis accusamus praesentium veniam nemo.",
                            OldPrice = "R$195,48",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 5, 4, 15, 30, 15, 582, DateTimeKind.Local).AddTicks(1231),
                            Price = "R$98,72",
                            ProductAvailable = true,
                            ProductCost = 0.6309451948064120m,
                            ProductLinksId = 0L,
                            ProductName = "Handmade Frozen Mouse",
                            Published = true,
                            QuantityPerUnity = 58,
                            Ranking = 4,
                            SKU = "o0ycj0bvryyu3xgt",
                            Slug = "iure-odit-expedita",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Jewelery",
                            UnitPrice = 54.640758342408000m,
                            UnitSize = 5.0742225884805500m,
                            UnitWeight = 0.049929586728070671,
                            UnitsInStock = 5,
                            UnitsOnOrder = 1,
                            UpdatedOnUtc = new DateTime(2019, 9, 8, 20, 43, 0, 453, DateTimeKind.Local).AddTicks(7007),
                            VendorId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 5L,
                            CategoryId = 5L,
                            CreatedAt = new DateTime(2019, 3, 15, 4, 11, 0, 638, DateTimeKind.Local).AddTicks(3516),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 917, DateTimeKind.Unspecified).AddTicks(6774), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 5L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "nisi",
                            OldPrice = "R$134,46",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 6, 10, 6, 6, 18, 659, DateTimeKind.Local).AddTicks(510),
                            Price = "R$76,15",
                            ProductAvailable = true,
                            ProductCost = 0.09680832926966640m,
                            ProductLinksId = 0L,
                            ProductName = "Small Rubber Towels",
                            Published = true,
                            QuantityPerUnity = 74,
                            Ranking = 5,
                            SKU = "34rs0rjpi4tv1gc4",
                            Slug = "architecto-et-asperiores",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Games",
                            UnitPrice = 75.8200576881972000m,
                            UnitSize = 1.5803035169748100m,
                            UnitWeight = 0.77614764858789165,
                            UnitsInStock = 4,
                            UnitsOnOrder = 1,
                            UpdatedOnUtc = new DateTime(2019, 9, 9, 20, 30, 0, 901, DateTimeKind.Local).AddTicks(6459),
                            VendorId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 6L,
                            CategoryId = 6L,
                            CreatedAt = new DateTime(2019, 8, 31, 6, 38, 24, 117, DateTimeKind.Local).AddTicks(5520),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 917, DateTimeKind.Unspecified).AddTicks(7059), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 6L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "Sequi optio nulla consequatur sapiente voluptatibus.",
                            OldPrice = "R$135,02",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 2, 19, 20, 48, 2, 766, DateTimeKind.Local).AddTicks(5147),
                            Price = "R$59,48",
                            ProductAvailable = true,
                            ProductCost = 0.7921158698350730m,
                            ProductLinksId = 0L,
                            ProductName = "Generic Plastic Gloves",
                            Published = true,
                            QuantityPerUnity = 46,
                            Ranking = 6,
                            SKU = "brr663l45p872gsd",
                            Slug = "a-alias-sit",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Kids",
                            UnitPrice = 38.5838592604659000m,
                            UnitSize = 7.2271772833667600m,
                            UnitWeight = 0.38442640629803126,
                            UnitsInStock = 5,
                            UnitsOnOrder = 3,
                            UpdatedOnUtc = new DateTime(2019, 9, 8, 19, 1, 4, 366, DateTimeKind.Local).AddTicks(6864),
                            VendorId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 7L,
                            CategoryId = 7L,
                            CreatedAt = new DateTime(2019, 3, 30, 2, 18, 4, 735, DateTimeKind.Local).AddTicks(9261),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 917, DateTimeKind.Unspecified).AddTicks(7323), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 7L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = @"Ut perferendis nobis ut cupiditate et nisi et.
Molestias accusantium hic animi itaque enim ratione tenetur in.
Adipisci ipsam qui vel soluta iusto.
Amet quae suscipit.",
                            OldPrice = "R$161,72",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 6, 13, 19, 1, 17, 356, DateTimeKind.Local).AddTicks(2398),
                            Price = "R$26,29",
                            ProductAvailable = true,
                            ProductCost = 0.07071043414562490m,
                            ProductLinksId = 0L,
                            ProductName = "Small Steel Pizza",
                            Published = true,
                            QuantityPerUnity = 78,
                            Ranking = 7,
                            SKU = "l0qlnowe0pgp7msb",
                            Slug = "repellendus-et-ea",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Kids",
                            UnitPrice = 97.4202213796881000m,
                            UnitSize = 4.0556088062262200m,
                            UnitWeight = 0.41329447059579866,
                            UnitsInStock = 3,
                            UnitsOnOrder = 8,
                            UpdatedOnUtc = new DateTime(2019, 9, 9, 6, 27, 23, 53, DateTimeKind.Local).AddTicks(2060),
                            VendorId = 7L
                        },
                        new
                        {
                            Id = 8L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 8L,
                            CategoryId = 8L,
                            CreatedAt = new DateTime(2018, 12, 13, 5, 29, 20, 226, DateTimeKind.Local).AddTicks(7086),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 917, DateTimeKind.Unspecified).AddTicks(7787), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 8L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = @"Sunt eum culpa aut.
Possimus id aut qui ut repellendus et porro.
Et et ut debitis consectetur.
Veniam veritatis omnis laudantium aliquam.
Qui et quia eos vel voluptatem minima ipsam magni rerum.
Eum dolores dolores temporibus cumque vel expedita consequuntur provident.",
                            OldPrice = "R$190,52",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 4, 12, 6, 21, 14, 457, DateTimeKind.Local).AddTicks(5375),
                            Price = "R$1,38",
                            ProductAvailable = true,
                            ProductCost = 0.2150053415517350m,
                            ProductLinksId = 0L,
                            ProductName = "Fantastic Metal Fish",
                            Published = true,
                            QuantityPerUnity = 72,
                            Ranking = 8,
                            SKU = "fpxkbn6gp9e979ei",
                            Slug = "harum-alias-voluptates",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Grocery",
                            UnitPrice = 28.2546035611325000m,
                            UnitSize = 2.9549101474484900m,
                            UnitWeight = 0.60256014745801689,
                            UnitsInStock = 7,
                            UnitsOnOrder = 9,
                            UpdatedOnUtc = new DateTime(2019, 9, 8, 20, 20, 10, 461, DateTimeKind.Local).AddTicks(3142),
                            VendorId = 8L
                        },
                        new
                        {
                            Id = 9L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 9L,
                            CategoryId = 9L,
                            CreatedAt = new DateTime(2019, 4, 18, 3, 34, 38, 806, DateTimeKind.Local).AddTicks(5433),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 917, DateTimeKind.Unspecified).AddTicks(8323), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 9L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = @"Voluptas est dignissimos dolorum quaerat.
Possimus temporibus aut et modi at nobis quos.
Animi id doloremque nobis repellat cumque et quasi quis voluptatem.
Omnis ut est nihil a saepe quaerat.
Autem earum a mollitia molestiae ea in officia.",
                            OldPrice = "R$180,84",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 1, 27, 11, 19, 24, 184, DateTimeKind.Local).AddTicks(9789),
                            Price = "R$81,26",
                            ProductAvailable = true,
                            ProductCost = 0.3610175053407520m,
                            ProductLinksId = 0L,
                            ProductName = "Refined Granite Soap",
                            Published = true,
                            QuantityPerUnity = 10,
                            Ranking = 9,
                            SKU = "4mpm6hyymme7615d",
                            Slug = "eligendi-occaecati-culpa",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Computers",
                            UnitPrice = 72.4169059062455000m,
                            UnitSize = 3.390606214939900m,
                            UnitWeight = 0.98345063346598793,
                            UnitsInStock = 2,
                            UnitsOnOrder = 2,
                            UpdatedOnUtc = new DateTime(2019, 9, 9, 13, 14, 52, 154, DateTimeKind.Local).AddTicks(8896),
                            VendorId = 9L
                        },
                        new
                        {
                            Id = 10L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 10L,
                            CategoryId = 10L,
                            CreatedAt = new DateTime(2019, 8, 11, 9, 52, 51, 730, DateTimeKind.Local).AddTicks(9788),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 917, DateTimeKind.Unspecified).AddTicks(8786), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 10L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "Beatae nisi ut est asperiores iste architecto similique quia et. Amet dignissimos ut non. Et aperiam quibusdam ea ratione.",
                            OldPrice = "R$149,33",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 2, 8, 2, 14, 36, 933, DateTimeKind.Local).AddTicks(9338),
                            Price = "R$85,93",
                            ProductAvailable = true,
                            ProductCost = 0.3106617272415490m,
                            ProductLinksId = 0L,
                            ProductName = "Practical Concrete Salad",
                            Published = true,
                            QuantityPerUnity = 32,
                            Ranking = 10,
                            SKU = "pl8m5cqwu2gnbl0p",
                            Slug = "sapiente-rerum-qui",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Music",
                            UnitPrice = 11.1523835506068000m,
                            UnitSize = 6.0029580378918700m,
                            UnitWeight = 0.80688511757500703,
                            UnitsInStock = 1,
                            UnitsOnOrder = 9,
                            UpdatedOnUtc = new DateTime(2019, 9, 8, 16, 28, 21, 84, DateTimeKind.Local).AddTicks(126),
                            VendorId = 10L
                        },
                        new
                        {
                            Id = 11L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 11L,
                            CategoryId = 11L,
                            CreatedAt = new DateTime(2018, 10, 28, 20, 9, 20, 155, DateTimeKind.Local).AddTicks(9842),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 917, DateTimeKind.Unspecified).AddTicks(9159), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 11L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "Officia sequi debitis sunt facere perspiciatis.",
                            OldPrice = "R$153,28",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 2, 24, 22, 42, 16, 931, DateTimeKind.Local).AddTicks(1601),
                            Price = "R$46,68",
                            ProductAvailable = true,
                            ProductCost = 0.806793630033170m,
                            ProductLinksId = 0L,
                            ProductName = "Practical Concrete Shoes",
                            Published = true,
                            QuantityPerUnity = 70,
                            Ranking = 11,
                            SKU = "nzrphvb1x4muwxv2",
                            Slug = "qui-blanditiis-molestiae",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Outdoors",
                            UnitPrice = 22.2262196346308000m,
                            UnitSize = 7.8337508429930300m,
                            UnitWeight = 0.59794866600909669,
                            UnitsInStock = 7,
                            UnitsOnOrder = 6,
                            UpdatedOnUtc = new DateTime(2019, 9, 9, 9, 3, 47, 20, DateTimeKind.Local).AddTicks(1078),
                            VendorId = 11L
                        },
                        new
                        {
                            Id = 12L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 12L,
                            CategoryId = 12L,
                            CreatedAt = new DateTime(2018, 11, 27, 10, 42, 37, 183, DateTimeKind.Local).AddTicks(7304),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 917, DateTimeKind.Unspecified).AddTicks(9424), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 12L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = @"Enim ut voluptas alias.
Magnam sed qui velit nobis adipisci ex incidunt.
Id voluptatem quia nobis aperiam.
Temporibus quia odit ipsa.",
                            OldPrice = "R$128,70",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 1, 21, 17, 31, 27, 869, DateTimeKind.Local).AddTicks(1956),
                            Price = "R$46,46",
                            ProductAvailable = true,
                            ProductCost = 0.2557082964366810m,
                            ProductLinksId = 0L,
                            ProductName = "Small Concrete Salad",
                            Published = true,
                            QuantityPerUnity = 26,
                            Ranking = 12,
                            SKU = "e5o1wyicfx7j4t6w",
                            Slug = "qui-ex-aut",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Shoes",
                            UnitPrice = 37.4928126751877000m,
                            UnitSize = 1.5195487213877700m,
                            UnitWeight = 0.41976917880576531,
                            UnitsInStock = 3,
                            UnitsOnOrder = 7,
                            UpdatedOnUtc = new DateTime(2019, 9, 8, 18, 52, 9, 169, DateTimeKind.Local).AddTicks(7132),
                            VendorId = 12L
                        },
                        new
                        {
                            Id = 13L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 13L,
                            CategoryId = 13L,
                            CreatedAt = new DateTime(2019, 1, 30, 11, 39, 44, 276, DateTimeKind.Local).AddTicks(964),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 917, DateTimeKind.Unspecified).AddTicks(9796), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 13L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "Natus dolorem qui dicta tempora eveniet dolorem expedita.",
                            OldPrice = "R$93,02",
                            PreOrderAvailabilityStartDate = new DateTime(2019, 9, 28, 6, 45, 42, 922, DateTimeKind.Local).AddTicks(1300),
                            Price = "R$26,09",
                            ProductAvailable = true,
                            ProductCost = 0.5136622146301260m,
                            ProductLinksId = 0L,
                            ProductName = "Tasty Wooden Computer",
                            Published = true,
                            QuantityPerUnity = 12,
                            Ranking = 13,
                            SKU = "pfjfkn66ose1tr53",
                            Slug = "explicabo-iste-in",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Tools",
                            UnitPrice = 54.3267866849558000m,
                            UnitSize = 7.2191235689535400m,
                            UnitWeight = 0.051640555752273908,
                            UnitsInStock = 10,
                            UnitsOnOrder = 7,
                            UpdatedOnUtc = new DateTime(2019, 9, 9, 0, 58, 55, 972, DateTimeKind.Local).AddTicks(3272),
                            VendorId = 13L
                        },
                        new
                        {
                            Id = 14L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 14L,
                            CategoryId = 14L,
                            CreatedAt = new DateTime(2019, 5, 20, 10, 39, 25, 229, DateTimeKind.Local).AddTicks(7763),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(92), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 14L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "Praesentium quos dignissimos natus maxime nisi alias non. Quo laboriosam aliquam. Fugit facilis officiis aut et.",
                            OldPrice = "R$101,44",
                            PreOrderAvailabilityStartDate = new DateTime(2019, 10, 28, 12, 47, 9, 725, DateTimeKind.Local).AddTicks(4857),
                            Price = "R$88,15",
                            ProductAvailable = true,
                            ProductCost = 0.3257732951667970m,
                            ProductLinksId = 0L,
                            ProductName = "Generic Cotton Chair",
                            Published = true,
                            QuantityPerUnity = 88,
                            Ranking = 14,
                            SKU = "4n1tkqykp0dkwqi3",
                            Slug = "a-aut-hic",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Kids",
                            UnitPrice = 43.0337288617314000m,
                            UnitSize = 3.3256646168072100m,
                            UnitWeight = 0.83972615182387,
                            UnitsInStock = 1,
                            UnitsOnOrder = 8,
                            UpdatedOnUtc = new DateTime(2019, 9, 9, 11, 32, 34, 138, DateTimeKind.Local).AddTicks(5884),
                            VendorId = 14L
                        },
                        new
                        {
                            Id = 15L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 15L,
                            CategoryId = 15L,
                            CreatedAt = new DateTime(2019, 6, 12, 13, 45, 22, 78, DateTimeKind.Local).AddTicks(3419),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(438), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 15L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = @"Assumenda laboriosam ullam neque reprehenderit velit et.
Consequuntur earum eos laudantium dolores alias maxime commodi officiis.
Molestias in natus.
Tempora et ea aperiam numquam occaecati.
Architecto ratione corporis.",
                            OldPrice = "R$164,88",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 8, 12, 3, 0, 33, 802, DateTimeKind.Local).AddTicks(9189),
                            Price = "R$54,88",
                            ProductAvailable = true,
                            ProductCost = 0.7308192838592540m,
                            ProductLinksId = 0L,
                            ProductName = "Licensed Concrete Mouse",
                            Published = true,
                            QuantityPerUnity = 92,
                            Ranking = 15,
                            SKU = "poyuv9ix05dikx6l",
                            Slug = "suscipit-natus-eius",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Jewelery",
                            UnitPrice = 36.7003809831573000m,
                            UnitSize = 6.2648446514573200m,
                            UnitWeight = 0.15493425547840736,
                            UnitsInStock = 4,
                            UnitsOnOrder = 7,
                            UpdatedOnUtc = new DateTime(2019, 9, 8, 10, 20, 53, 614, DateTimeKind.Local).AddTicks(1388),
                            VendorId = 15L
                        },
                        new
                        {
                            Id = 16L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 16L,
                            CategoryId = 16L,
                            CreatedAt = new DateTime(2019, 1, 27, 0, 13, 41, 920, DateTimeKind.Local).AddTicks(3511),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(871), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 16L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = @"Qui ducimus sed temporibus velit qui mollitia et officia.
Nemo dolores voluptate explicabo excepturi qui voluptate magni voluptas dolore.
Qui eius mollitia id incidunt autem necessitatibus maxime ex.
Quasi impedit et.
Qui quibusdam provident repudiandae expedita neque id.
Perferendis blanditiis iste eum laudantium voluptate pariatur.",
                            OldPrice = "R$75,99",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 4, 16, 15, 36, 3, 657, DateTimeKind.Local).AddTicks(7002),
                            Price = "R$86,37",
                            ProductAvailable = true,
                            ProductCost = 0.8804988953659770m,
                            ProductLinksId = 0L,
                            ProductName = "Rustic Plastic Tuna",
                            Published = true,
                            QuantityPerUnity = 80,
                            Ranking = 16,
                            SKU = "0ctfmmskq71zb4sr",
                            Slug = "ex-adipisci-voluptates",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Shoes",
                            UnitPrice = 91.8131047356004000m,
                            UnitSize = 5.5872606372401400m,
                            UnitWeight = 0.67378393219494448,
                            UnitsInStock = 2,
                            UnitsOnOrder = 5,
                            UpdatedOnUtc = new DateTime(2019, 9, 8, 9, 13, 49, 918, DateTimeKind.Local).AddTicks(1366),
                            VendorId = 16L
                        },
                        new
                        {
                            Id = 17L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 17L,
                            CategoryId = 17L,
                            CreatedAt = new DateTime(2019, 3, 1, 12, 4, 25, 338, DateTimeKind.Local).AddTicks(365),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(1355), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 17L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "Adipisci ut earum nemo qui. Quis ut eius assumenda aut doloribus deleniti dolorem doloribus. Optio non voluptas id. Praesentium eos quia. Tempora reiciendis quod. Quae eligendi similique.",
                            OldPrice = "R$115,91",
                            PreOrderAvailabilityStartDate = new DateTime(2019, 12, 13, 10, 57, 0, 729, DateTimeKind.Local).AddTicks(3173),
                            Price = "R$70,93",
                            ProductAvailable = true,
                            ProductCost = 0.8289839061112070m,
                            ProductLinksId = 0L,
                            ProductName = "Intelligent Frozen Pants",
                            Published = true,
                            QuantityPerUnity = 48,
                            Ranking = 17,
                            SKU = "pv8s8sihx0v76344",
                            Slug = "sed-qui-quae",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Sports",
                            UnitPrice = 49.3752417384532000m,
                            UnitSize = 8.9365541278089200m,
                            UnitWeight = 0.74450396594801171,
                            UnitsInStock = 2,
                            UnitsOnOrder = 0,
                            UpdatedOnUtc = new DateTime(2019, 9, 9, 9, 15, 40, 502, DateTimeKind.Local).AddTicks(4138),
                            VendorId = 17L
                        },
                        new
                        {
                            Id = 18L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 18L,
                            CategoryId = 18L,
                            CreatedAt = new DateTime(2019, 1, 25, 16, 47, 55, 118, DateTimeKind.Local).AddTicks(6927),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(1809), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 18L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "Illo sed eos nesciunt tempore modi repudiandae ut ducimus omnis. Rem cum dolore explicabo. Praesentium qui voluptate autem sed. Placeat velit est veritatis aut quasi ipsa impedit libero. Excepturi ipsa enim velit aliquid expedita dolorum consequatur.",
                            OldPrice = "R$80,46",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 5, 5, 7, 41, 7, 284, DateTimeKind.Local).AddTicks(8428),
                            Price = "R$97,47",
                            ProductAvailable = true,
                            ProductCost = 0.751715179417150m,
                            ProductLinksId = 0L,
                            ProductName = "Handmade Frozen Sausages",
                            Published = true,
                            QuantityPerUnity = 28,
                            Ranking = 18,
                            SKU = "9yc02ilhk31bq7ta",
                            Slug = "tempora-rerum-harum",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Electronics",
                            UnitPrice = 99.7582716866202000m,
                            UnitSize = 9.0272553260565100m,
                            UnitWeight = 0.46440220878664507,
                            UnitsInStock = 9,
                            UnitsOnOrder = 8,
                            UpdatedOnUtc = new DateTime(2019, 9, 9, 1, 40, 28, 590, DateTimeKind.Local).AddTicks(2475),
                            VendorId = 18L
                        },
                        new
                        {
                            Id = 19L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 19L,
                            CategoryId = 19L,
                            CreatedAt = new DateTime(2019, 7, 10, 11, 28, 50, 563, DateTimeKind.Local).AddTicks(2436),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(2251), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 19L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "dolore",
                            OldPrice = "R$91,67",
                            PreOrderAvailabilityStartDate = new DateTime(2019, 11, 14, 20, 29, 29, 957, DateTimeKind.Local).AddTicks(4145),
                            Price = "R$81,04",
                            ProductAvailable = true,
                            ProductCost = 0.4477698022722130m,
                            ProductLinksId = 0L,
                            ProductName = "Unbranded Wooden Table",
                            Published = true,
                            QuantityPerUnity = 80,
                            Ranking = 19,
                            SKU = "8h7vasnim4u7qvgy",
                            Slug = "harum-reiciendis-saepe",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Industrial",
                            UnitPrice = 40.4257609697179000m,
                            UnitSize = 9.647059715188600m,
                            UnitWeight = 0.40032750293627728,
                            UnitsInStock = 7,
                            UnitsOnOrder = 0,
                            UpdatedOnUtc = new DateTime(2019, 9, 8, 13, 13, 30, 332, DateTimeKind.Local).AddTicks(5000),
                            VendorId = 19L
                        },
                        new
                        {
                            Id = 20L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 20L,
                            CategoryId = 20L,
                            CreatedAt = new DateTime(2018, 12, 27, 4, 44, 17, 688, DateTimeKind.Local).AddTicks(4860),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(2475), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 20L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = @"Qui ad expedita blanditiis maiores atque.
Et a occaecati ut occaecati.
Qui facere non.",
                            OldPrice = "R$154,57",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 3, 9, 11, 43, 26, 845, DateTimeKind.Local).AddTicks(5115),
                            Price = "R$48,18",
                            ProductAvailable = true,
                            ProductCost = 0.1566752866640110m,
                            ProductLinksId = 0L,
                            ProductName = "Incredible Wooden Chips",
                            Published = true,
                            QuantityPerUnity = 26,
                            Ranking = 20,
                            SKU = "eo50v470qhvzo06m",
                            Slug = "ad-vitae-aut",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Games",
                            UnitPrice = 41.3925373653846000m,
                            UnitSize = 6.55560165483300m,
                            UnitWeight = 0.70160124623291253,
                            UnitsInStock = 1,
                            UnitsOnOrder = 6,
                            UpdatedOnUtc = new DateTime(2019, 9, 8, 8, 19, 0, 391, DateTimeKind.Local).AddTicks(3682),
                            VendorId = 20L
                        },
                        new
                        {
                            Id = 21L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 21L,
                            CategoryId = 21L,
                            CreatedAt = new DateTime(2019, 9, 6, 13, 39, 17, 707, DateTimeKind.Local).AddTicks(1380),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(2813), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 21L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = @"Quia nesciunt et aliquam est.
Quia aut nemo vel fuga odio odit sed nihil a.
Et repellendus cumque.
Sed sapiente qui voluptatum dolores et tempore neque enim.
Nostrum repellendus asperiores quae et dicta iusto et sint omnis.",
                            OldPrice = "R$52,26",
                            PreOrderAvailabilityStartDate = new DateTime(2019, 10, 4, 11, 51, 14, 424, DateTimeKind.Local).AddTicks(5020),
                            Price = "R$21,15",
                            ProductAvailable = true,
                            ProductCost = 0.7261191544710280m,
                            ProductLinksId = 0L,
                            ProductName = "Small Soft Cheese",
                            Published = true,
                            QuantityPerUnity = 26,
                            Ranking = 21,
                            SKU = "9gu7gwka78ioiwyb",
                            Slug = "error-ut-et",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Computers",
                            UnitPrice = 77.3376784647525000m,
                            UnitSize = 6.5994484893043800m,
                            UnitWeight = 0.68304773731299107,
                            UnitsInStock = 9,
                            UnitsOnOrder = 5,
                            UpdatedOnUtc = new DateTime(2019, 9, 8, 5, 47, 8, 830, DateTimeKind.Local).AddTicks(2910),
                            VendorId = 21L
                        },
                        new
                        {
                            Id = 22L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 22L,
                            CategoryId = 22L,
                            CreatedAt = new DateTime(2019, 2, 12, 8, 50, 35, 555, DateTimeKind.Local).AddTicks(5830),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(3576), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 22L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "Odio corrupti quae rem nihil ut voluptate.",
                            OldPrice = "R$11,12",
                            PreOrderAvailabilityStartDate = new DateTime(2019, 12, 11, 8, 31, 39, 909, DateTimeKind.Local).AddTicks(3205),
                            Price = "R$87,26",
                            ProductAvailable = true,
                            ProductCost = 0.6561163103469260m,
                            ProductLinksId = 0L,
                            ProductName = "Handmade Fresh Salad",
                            Published = true,
                            QuantityPerUnity = 64,
                            Ranking = 22,
                            SKU = "t2gm71s8djyzvcn4",
                            Slug = "corrupti-quidem-officiis",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Baby",
                            UnitPrice = 23.4175663550466000m,
                            UnitSize = 2.8397612240350600m,
                            UnitWeight = 0.38736571063630548,
                            UnitsInStock = 7,
                            UnitsOnOrder = 3,
                            UpdatedOnUtc = new DateTime(2019, 9, 8, 14, 12, 57, 773, DateTimeKind.Local).AddTicks(7334),
                            VendorId = 22L
                        },
                        new
                        {
                            Id = 23L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 23L,
                            CategoryId = 23L,
                            CreatedAt = new DateTime(2019, 7, 9, 8, 57, 0, 765, DateTimeKind.Local).AddTicks(5891),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(3940), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 23L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "Porro eum doloremque eum quo.",
                            OldPrice = "R$61,73",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 3, 17, 9, 30, 38, 569, DateTimeKind.Local).AddTicks(4133),
                            Price = "R$51,49",
                            ProductAvailable = true,
                            ProductCost = 0.8541778492993570m,
                            ProductLinksId = 0L,
                            ProductName = "Refined Metal Keyboard",
                            Published = true,
                            QuantityPerUnity = 96,
                            Ranking = 23,
                            SKU = "1mfu62y5tcyn4wwx",
                            Slug = "excepturi-excepturi-eum",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Sports",
                            UnitPrice = 8.10807221946682000m,
                            UnitSize = 5.733005481647800m,
                            UnitWeight = 0.76432975370638523,
                            UnitsInStock = 9,
                            UnitsOnOrder = 9,
                            UpdatedOnUtc = new DateTime(2019, 9, 9, 5, 30, 10, 451, DateTimeKind.Local).AddTicks(4002),
                            VendorId = 23L
                        },
                        new
                        {
                            Id = 24L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 24L,
                            CategoryId = 24L,
                            CreatedAt = new DateTime(2018, 11, 24, 19, 27, 24, 956, DateTimeKind.Local).AddTicks(5555),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(4192), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 24L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "Nulla nisi eum nulla. At et dignissimos. Optio quam rerum veniam consequatur et corporis. Ullam et iste quia dolor et qui ullam minus. Blanditiis earum explicabo animi provident. Perspiciatis ipsum totam qui dolorum non vel mollitia quod.",
                            OldPrice = "R$183,65",
                            PreOrderAvailabilityStartDate = new DateTime(2019, 12, 26, 21, 36, 54, 877, DateTimeKind.Local).AddTicks(6437),
                            Price = "R$23,70",
                            ProductAvailable = true,
                            ProductCost = 0.003113708460290780m,
                            ProductLinksId = 0L,
                            ProductName = "Awesome Soft Car",
                            Published = true,
                            QuantityPerUnity = 32,
                            Ranking = 24,
                            SKU = "wejonaqq0t7gjo06",
                            Slug = "aut-laborum-nihil",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Grocery",
                            UnitPrice = 93.7677325651831000m,
                            UnitSize = 5.7769837117646800m,
                            UnitWeight = 0.6027264234622598,
                            UnitsInStock = 6,
                            UnitsOnOrder = 0,
                            UpdatedOnUtc = new DateTime(2019, 9, 8, 21, 36, 41, 551, DateTimeKind.Local).AddTicks(1046),
                            VendorId = 24L
                        },
                        new
                        {
                            Id = 25L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 25L,
                            CategoryId = 25L,
                            CreatedAt = new DateTime(2019, 6, 3, 9, 43, 28, 426, DateTimeKind.Local).AddTicks(5461),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(4715), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 25L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "nihil",
                            OldPrice = "R$69,89",
                            PreOrderAvailabilityStartDate = new DateTime(2019, 9, 20, 12, 34, 30, 930, DateTimeKind.Local).AddTicks(1322),
                            Price = "R$64,65",
                            ProductAvailable = true,
                            ProductCost = 0.8599056326131830m,
                            ProductLinksId = 0L,
                            ProductName = "Handmade Soft Ball",
                            Published = true,
                            QuantityPerUnity = 38,
                            Ranking = 25,
                            SKU = "d2nf8jaizih3wtq6",
                            Slug = "iusto-atque-numquam",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Shoes",
                            UnitPrice = 98.8738825539471000m,
                            UnitSize = 9.5097837082621600m,
                            UnitWeight = 0.13911046094219687,
                            UnitsInStock = 5,
                            UnitsOnOrder = 6,
                            UpdatedOnUtc = new DateTime(2019, 9, 8, 22, 43, 15, 40, DateTimeKind.Local).AddTicks(6150),
                            VendorId = 25L
                        },
                        new
                        {
                            Id = 26L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 26L,
                            CategoryId = 26L,
                            CreatedAt = new DateTime(2019, 2, 7, 16, 39, 54, 902, DateTimeKind.Local).AddTicks(6924),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(4944), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 26L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = @"Nobis ea et dolores provident.
Nisi ratione sed dolorem accusantium ut.
Aut dolorem eum aut necessitatibus est.",
                            OldPrice = "R$155,71",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 7, 29, 3, 29, 43, 42, DateTimeKind.Local).AddTicks(9590),
                            Price = "R$5,88",
                            ProductAvailable = true,
                            ProductCost = 0.7917723743206690m,
                            ProductLinksId = 0L,
                            ProductName = "Awesome Steel Bike",
                            Published = true,
                            QuantityPerUnity = 60,
                            Ranking = 26,
                            SKU = "am8qt4ya0ltjykeo",
                            Slug = "porro-ducimus-aut",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Books",
                            UnitPrice = 55.3120605905131000m,
                            UnitSize = 4.0461454466200200m,
                            UnitWeight = 0.86214974516171483,
                            UnitsInStock = 1,
                            UnitsOnOrder = 2,
                            UpdatedOnUtc = new DateTime(2019, 9, 8, 18, 58, 0, 375, DateTimeKind.Local).AddTicks(6262),
                            VendorId = 26L
                        },
                        new
                        {
                            Id = 27L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 27L,
                            CategoryId = 27L,
                            CreatedAt = new DateTime(2019, 2, 5, 12, 50, 57, 241, DateTimeKind.Local).AddTicks(9176),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(5298), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 27L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "eveniet",
                            OldPrice = "R$57,27",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 1, 18, 2, 41, 14, 836, DateTimeKind.Local).AddTicks(2239),
                            Price = "R$51,30",
                            ProductAvailable = true,
                            ProductCost = 0.770234314617810m,
                            ProductLinksId = 0L,
                            ProductName = "Ergonomic Cotton Soap",
                            Published = true,
                            QuantityPerUnity = 94,
                            Ranking = 27,
                            SKU = "khl1b6wef62jia2h",
                            Slug = "non-corporis-qui",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Books",
                            UnitPrice = 49.2119146274458000m,
                            UnitSize = 3.1755697322895600m,
                            UnitWeight = 0.89477759408521351,
                            UnitsInStock = 9,
                            UnitsOnOrder = 4,
                            UpdatedOnUtc = new DateTime(2019, 9, 9, 9, 32, 45, 285, DateTimeKind.Local).AddTicks(4725),
                            VendorId = 27L
                        },
                        new
                        {
                            Id = 28L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 28L,
                            CategoryId = 28L,
                            CreatedAt = new DateTime(2019, 5, 6, 21, 2, 9, 863, DateTimeKind.Local).AddTicks(6449),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(5523), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 28L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "Omnis pariatur sed explicabo aut recusandae saepe. Voluptas voluptatem et sint aperiam cupiditate. Molestiae earum molestiae enim ut reiciendis. Illum sit voluptatem ducimus vitae repudiandae dolorem non. Ex laborum at aut in quae.",
                            OldPrice = "R$48,04",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 7, 5, 11, 56, 31, 400, DateTimeKind.Local).AddTicks(9738),
                            Price = "R$25,16",
                            ProductAvailable = true,
                            ProductCost = 0.346411271182080m,
                            ProductLinksId = 0L,
                            ProductName = "Licensed Rubber Sausages",
                            Published = true,
                            QuantityPerUnity = 48,
                            Ranking = 28,
                            SKU = "egiz8aaekfkcca8k",
                            Slug = "quis-ut-iusto",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Tools",
                            UnitPrice = 53.9993072180074000m,
                            UnitSize = 3.1915786132177200m,
                            UnitWeight = 0.67787231722747554,
                            UnitsInStock = 8,
                            UnitsOnOrder = 7,
                            UpdatedOnUtc = new DateTime(2019, 9, 9, 2, 35, 13, 68, DateTimeKind.Local).AddTicks(3014),
                            VendorId = 28L
                        },
                        new
                        {
                            Id = 29L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 29L,
                            CategoryId = 29L,
                            CreatedAt = new DateTime(2019, 4, 14, 6, 29, 46, 570, DateTimeKind.Local).AddTicks(3719),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(5978), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 29L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "vero",
                            OldPrice = "R$109,22",
                            PreOrderAvailabilityStartDate = new DateTime(2019, 10, 5, 4, 35, 16, 151, DateTimeKind.Local).AddTicks(8732),
                            Price = "R$69,76",
                            ProductAvailable = true,
                            ProductCost = 0.5103052773095230m,
                            ProductLinksId = 0L,
                            ProductName = "Refined Cotton Bacon",
                            Published = true,
                            QuantityPerUnity = 52,
                            Ranking = 29,
                            SKU = "2rucmckw17tnuzl4",
                            Slug = "illum-quaerat-et",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Games",
                            UnitPrice = 87.8897731601679000m,
                            UnitSize = 8.9149092412157500m,
                            UnitWeight = 0.69694294347285435,
                            UnitsInStock = 2,
                            UnitsOnOrder = 9,
                            UpdatedOnUtc = new DateTime(2019, 9, 9, 4, 9, 10, 152, DateTimeKind.Local).AddTicks(131),
                            VendorId = 29L
                        },
                        new
                        {
                            Id = 30L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 30L,
                            CategoryId = 30L,
                            CreatedAt = new DateTime(2019, 2, 9, 0, 36, 35, 653, DateTimeKind.Local).AddTicks(6754),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(6204), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 30L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = @"Sed quod porro sint.
Necessitatibus ea ut aperiam quis fuga totam facilis.
At vitae hic qui quod.
Distinctio velit incidunt.",
                            OldPrice = "R$21,21",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 9, 2, 14, 25, 19, 384, DateTimeKind.Local).AddTicks(371),
                            Price = "R$94,40",
                            ProductAvailable = true,
                            ProductCost = 0.928556223832330m,
                            ProductLinksId = 0L,
                            ProductName = "Fantastic Wooden Fish",
                            Published = true,
                            QuantityPerUnity = 34,
                            Ranking = 30,
                            SKU = "9a4juekhdiugky9a",
                            Slug = "dolor-officiis-qui",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Games",
                            UnitPrice = 20.2414014470956000m,
                            UnitSize = 7.0903575732793500m,
                            UnitWeight = 0.49126131436380621,
                            UnitsInStock = 7,
                            UnitsOnOrder = 4,
                            UpdatedOnUtc = new DateTime(2019, 9, 8, 3, 59, 56, 527, DateTimeKind.Local).AddTicks(3208),
                            VendorId = 30L
                        },
                        new
                        {
                            Id = 31L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 31L,
                            CategoryId = 31L,
                            CreatedAt = new DateTime(2018, 10, 13, 18, 15, 50, 437, DateTimeKind.Local).AddTicks(8735),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(6569), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 31L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "Rerum corporis quo ut quam.",
                            OldPrice = "R$150,78",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 7, 8, 16, 14, 44, 669, DateTimeKind.Local).AddTicks(4770),
                            Price = "R$37,44",
                            ProductAvailable = true,
                            ProductCost = 0.3372424698142530m,
                            ProductLinksId = 0L,
                            ProductName = "Unbranded Frozen Bike",
                            Published = true,
                            QuantityPerUnity = 34,
                            Ranking = 31,
                            SKU = "z3q1bdvtuuj6odce",
                            Slug = "maxime-reiciendis-repudiandae",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Toys",
                            UnitPrice = 77.3535941156343000m,
                            UnitSize = 5.1159604569505700m,
                            UnitWeight = 0.41919439352079962,
                            UnitsInStock = 7,
                            UnitsOnOrder = 3,
                            UpdatedOnUtc = new DateTime(2019, 9, 8, 20, 43, 56, 488, DateTimeKind.Local).AddTicks(9367),
                            VendorId = 31L
                        },
                        new
                        {
                            Id = 32L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 32L,
                            CategoryId = 32L,
                            CreatedAt = new DateTime(2018, 9, 20, 12, 23, 32, 879, DateTimeKind.Local).AddTicks(6983),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(6821), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 32L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "Quam facilis reiciendis dolores ea et voluptatum. Recusandae et deleniti. Porro neque libero minus neque. Minima non nemo facere nostrum. Qui mollitia veniam a numquam sapiente. Similique dolorem qui a odit expedita qui.",
                            OldPrice = "R$26,99",
                            PreOrderAvailabilityStartDate = new DateTime(2019, 12, 11, 10, 18, 44, 334, DateTimeKind.Local).AddTicks(4373),
                            Price = "R$61,46",
                            ProductAvailable = true,
                            ProductCost = 0.1324061626253680m,
                            ProductLinksId = 0L,
                            ProductName = "Fantastic Cotton Shirt",
                            Published = true,
                            QuantityPerUnity = 82,
                            Ranking = 32,
                            SKU = "x87kne0zdrmlyml2",
                            Slug = "eum-ut-tenetur",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Toys",
                            UnitPrice = 27.5612058711989000m,
                            UnitSize = 6.3808084122747200m,
                            UnitWeight = 0.9980431264257259,
                            UnitsInStock = 6,
                            UnitsOnOrder = 0,
                            UpdatedOnUtc = new DateTime(2019, 9, 9, 2, 50, 21, 500, DateTimeKind.Local).AddTicks(571),
                            VendorId = 32L
                        },
                        new
                        {
                            Id = 33L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 33L,
                            CategoryId = 33L,
                            CreatedAt = new DateTime(2018, 10, 28, 16, 10, 21, 204, DateTimeKind.Local).AddTicks(7915),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(7285), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 33L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "Ea recusandae similique dolores aut.",
                            OldPrice = "R$190,30",
                            PreOrderAvailabilityStartDate = new DateTime(2019, 12, 23, 19, 25, 56, 132, DateTimeKind.Local).AddTicks(2567),
                            Price = "R$35,80",
                            ProductAvailable = true,
                            ProductCost = 0.5232920970410540m,
                            ProductLinksId = 0L,
                            ProductName = "Ergonomic Granite Soap",
                            Published = true,
                            QuantityPerUnity = 56,
                            Ranking = 33,
                            SKU = "9fpkb8ockbr7ivz2",
                            Slug = "voluptates-magni-voluptatem",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Electronics",
                            UnitPrice = 71.0297122462791000m,
                            UnitSize = 0.75586658472002800m,
                            UnitWeight = 0.75644976448102375,
                            UnitsInStock = 1,
                            UnitsOnOrder = 3,
                            UpdatedOnUtc = new DateTime(2019, 9, 9, 2, 39, 36, 168, DateTimeKind.Local).AddTicks(5508),
                            VendorId = 33L
                        },
                        new
                        {
                            Id = 34L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 34L,
                            CategoryId = 34L,
                            CreatedAt = new DateTime(2019, 8, 31, 10, 34, 3, 984, DateTimeKind.Local).AddTicks(7926),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(7538), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 34L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "Sint vel doloribus. Et et dolor magnam fugiat mollitia consequatur. Distinctio ut nemo omnis quibusdam repudiandae. Earum voluptatem non et qui qui qui.",
                            OldPrice = "R$91,56",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 6, 24, 13, 9, 25, 18, DateTimeKind.Local).AddTicks(4500),
                            Price = "R$50,28",
                            ProductAvailable = true,
                            ProductCost = 0.1621617251830930m,
                            ProductLinksId = 0L,
                            ProductName = "Handmade Steel Keyboard",
                            Published = true,
                            QuantityPerUnity = 26,
                            Ranking = 34,
                            SKU = "uwm3htk4u916qyew",
                            Slug = "eveniet-ea-hic",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Baby",
                            UnitPrice = 16.4277588559444000m,
                            UnitSize = 4.1081332341340100m,
                            UnitWeight = 0.92754169410445808,
                            UnitsInStock = 4,
                            UnitsOnOrder = 2,
                            UpdatedOnUtc = new DateTime(2019, 9, 9, 9, 39, 3, 575, DateTimeKind.Local).AddTicks(1117),
                            VendorId = 34L
                        },
                        new
                        {
                            Id = 35L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 35L,
                            CategoryId = 35L,
                            CreatedAt = new DateTime(2018, 12, 19, 14, 29, 40, 348, DateTimeKind.Local).AddTicks(3128),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(7934), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 35L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "Mollitia accusamus consectetur beatae natus rerum officiis iusto. Libero in dignissimos sit explicabo voluptatibus fuga mollitia asperiores. Quis ex excepturi veritatis ea.",
                            OldPrice = "R$133,16",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 5, 29, 21, 57, 24, 515, DateTimeKind.Local).AddTicks(5500),
                            Price = "R$22,68",
                            ProductAvailable = true,
                            ProductCost = 0.9794147773549960m,
                            ProductLinksId = 0L,
                            ProductName = "Incredible Concrete Mouse",
                            Published = true,
                            QuantityPerUnity = 54,
                            Ranking = 35,
                            SKU = "5154njc9alvu5naa",
                            Slug = "suscipit-qui-doloribus",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Books",
                            UnitPrice = 32.1055863667771000m,
                            UnitSize = 1.7623659464355400m,
                            UnitWeight = 0.7464740666311579,
                            UnitsInStock = 3,
                            UnitsOnOrder = 0,
                            UpdatedOnUtc = new DateTime(2019, 9, 9, 4, 51, 8, 688, DateTimeKind.Local).AddTicks(7375),
                            VendorId = 35L
                        },
                        new
                        {
                            Id = 36L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 36L,
                            CategoryId = 36L,
                            CreatedAt = new DateTime(2019, 8, 4, 21, 4, 7, 334, DateTimeKind.Local).AddTicks(3991),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(8303), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 36L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "sit",
                            OldPrice = "R$23,04",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 8, 19, 3, 35, 2, 850, DateTimeKind.Local).AddTicks(4792),
                            Price = "R$1,20",
                            ProductAvailable = true,
                            ProductCost = 0.6771715063029770m,
                            ProductLinksId = 0L,
                            ProductName = "Incredible Rubber Chicken",
                            Published = true,
                            QuantityPerUnity = 8,
                            Ranking = 36,
                            SKU = "qosl0fvj2lkc3c4q",
                            Slug = "sunt-odio-quisquam",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Garden",
                            UnitPrice = 82.8927630944609000m,
                            UnitSize = 8.0632762369063100m,
                            UnitWeight = 0.85732109838040593,
                            UnitsInStock = 9,
                            UnitsOnOrder = 6,
                            UpdatedOnUtc = new DateTime(2019, 9, 8, 13, 25, 9, 587, DateTimeKind.Local).AddTicks(5469),
                            VendorId = 36L
                        },
                        new
                        {
                            Id = 37L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 37L,
                            CategoryId = 37L,
                            CreatedAt = new DateTime(2019, 2, 11, 19, 33, 20, 315, DateTimeKind.Local).AddTicks(191),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(8559), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 37L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = @"Dolor sint cumque.
Et eos aspernatur.
Inventore quia deserunt voluptas assumenda est non quidem qui.
Esse voluptas voluptatem sunt saepe soluta.
Sunt facilis praesentium.",
                            OldPrice = "R$171,21",
                            PreOrderAvailabilityStartDate = new DateTime(2019, 11, 5, 5, 26, 56, 328, DateTimeKind.Local).AddTicks(1717),
                            Price = "R$5,74",
                            ProductAvailable = true,
                            ProductCost = 0.1794527062119230m,
                            ProductLinksId = 0L,
                            ProductName = "Licensed Cotton Pants",
                            Published = true,
                            QuantityPerUnity = 28,
                            Ranking = 37,
                            SKU = "uhz0rnbwda2gam7m",
                            Slug = "non-at-et",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Clothing",
                            UnitPrice = 52.5953166897387000m,
                            UnitSize = 8.4713502360840100m,
                            UnitWeight = 0.95414447363193355,
                            UnitsInStock = 10,
                            UnitsOnOrder = 4,
                            UpdatedOnUtc = new DateTime(2019, 9, 8, 18, 59, 59, 405, DateTimeKind.Local).AddTicks(1994),
                            VendorId = 37L
                        },
                        new
                        {
                            Id = 38L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 38L,
                            CategoryId = 38L,
                            CreatedAt = new DateTime(2019, 9, 2, 21, 21, 2, 670, DateTimeKind.Local).AddTicks(8355),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(8946), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 38L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = @"Est et adipisci nihil quasi labore adipisci.
Quia error nihil inventore occaecati.
Qui suscipit quia aliquam ut cupiditate doloremque dolores placeat.
Totam consequuntur aut consequatur.",
                            OldPrice = "R$138,63",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 2, 21, 21, 52, 25, 982, DateTimeKind.Local).AddTicks(1685),
                            Price = "R$59,22",
                            ProductAvailable = true,
                            ProductCost = 0.09773433632111840m,
                            ProductLinksId = 0L,
                            ProductName = "Licensed Concrete Cheese",
                            Published = true,
                            QuantityPerUnity = 22,
                            Ranking = 38,
                            SKU = "ci4sp4li4lbi0bxr",
                            Slug = "dicta-voluptatem-sit",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Movies",
                            UnitPrice = 75.6327221056599000m,
                            UnitSize = 6.407589980590900m,
                            UnitWeight = 0.20558505188933809,
                            UnitsInStock = 0,
                            UnitsOnOrder = 0,
                            UpdatedOnUtc = new DateTime(2019, 9, 9, 8, 27, 28, 462, DateTimeKind.Local).AddTicks(4977),
                            VendorId = 38L
                        },
                        new
                        {
                            Id = 39L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 39L,
                            CategoryId = 39L,
                            CreatedAt = new DateTime(2018, 10, 23, 14, 28, 13, 235, DateTimeKind.Local).AddTicks(6134),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(9333), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 39L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "alias",
                            OldPrice = "R$56,54",
                            PreOrderAvailabilityStartDate = new DateTime(2019, 12, 5, 8, 19, 22, 52, DateTimeKind.Local).AddTicks(4475),
                            Price = "R$4,63",
                            ProductAvailable = true,
                            ProductCost = 0.00865028798982980m,
                            ProductLinksId = 0L,
                            ProductName = "Incredible Plastic Bike",
                            Published = true,
                            QuantityPerUnity = 36,
                            Ranking = 39,
                            SKU = "oksugn8ps0vurayk",
                            Slug = "rerum-fugit-et",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Computers",
                            UnitPrice = 70.767855723746000m,
                            UnitSize = 8.2840086511727500m,
                            UnitWeight = 0.48603081912083124,
                            UnitsInStock = 5,
                            UnitsOnOrder = 4,
                            UpdatedOnUtc = new DateTime(2019, 9, 9, 11, 21, 55, 391, DateTimeKind.Local).AddTicks(9542),
                            VendorId = 39L
                        },
                        new
                        {
                            Id = 40L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 40L,
                            CategoryId = 40L,
                            CreatedAt = new DateTime(2019, 8, 22, 17, 16, 59, 418, DateTimeKind.Local).AddTicks(764),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 918, DateTimeKind.Unspecified).AddTicks(9553), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 40L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "Alias suscipit ex qui officia alias occaecati aliquam. Doloribus est dolores eligendi non illo. Itaque placeat illum impedit ut sed sequi et nemo. Sit qui ea officia. Et culpa voluptatibus dicta est eum sint libero inventore. Vitae quaerat explicabo quo at omnis veniam facilis necessitatibus.",
                            OldPrice = "R$24,47",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 2, 13, 15, 49, 55, 823, DateTimeKind.Local).AddTicks(3959),
                            Price = "R$81,62",
                            ProductAvailable = true,
                            ProductCost = 0.1571630636030640m,
                            ProductLinksId = 0L,
                            ProductName = "Gorgeous Plastic Shoes",
                            Published = true,
                            QuantityPerUnity = 24,
                            Ranking = 40,
                            SKU = "8f3cpucp3y6c92ac",
                            Slug = "maxime-dicta-commodi",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Industrial",
                            UnitPrice = 69.9145312280928000m,
                            UnitSize = 2.151505328785400m,
                            UnitWeight = 0.74281104316134516,
                            UnitsInStock = 8,
                            UnitsOnOrder = 8,
                            UpdatedOnUtc = new DateTime(2019, 9, 8, 16, 6, 10, 110, DateTimeKind.Local).AddTicks(6817),
                            VendorId = 40L
                        },
                        new
                        {
                            Id = 41L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 41L,
                            CategoryId = 41L,
                            CreatedAt = new DateTime(2019, 2, 15, 13, 50, 29, 576, DateTimeKind.Local).AddTicks(4820),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 919, DateTimeKind.Unspecified).AddTicks(60), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 41L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = @"Molestiae in alias enim beatae.
Consectetur ea a recusandae corporis nulla odio adipisci accusamus qui.
In quia nisi.
Quia modi veritatis soluta dolore impedit nihil consequuntur reprehenderit.",
                            OldPrice = "R$5,64",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 6, 15, 19, 29, 8, 486, DateTimeKind.Local).AddTicks(777),
                            Price = "R$8,22",
                            ProductAvailable = true,
                            ProductCost = 0.2205306087716160m,
                            ProductLinksId = 0L,
                            ProductName = "Sleek Plastic Chips",
                            Published = true,
                            QuantityPerUnity = 74,
                            Ranking = 41,
                            SKU = "sww4sjpug0f2rx5y",
                            Slug = "inventore-non-qui",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Baby",
                            UnitPrice = 46.9380942391875000m,
                            UnitSize = 0.84101778028580200m,
                            UnitWeight = 0.7740645193374085,
                            UnitsInStock = 8,
                            UnitsOnOrder = 7,
                            UpdatedOnUtc = new DateTime(2019, 9, 9, 4, 19, 40, 42, DateTimeKind.Local).AddTicks(8021),
                            VendorId = 41L
                        },
                        new
                        {
                            Id = 42L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 42L,
                            CategoryId = 42L,
                            CreatedAt = new DateTime(2018, 12, 2, 8, 57, 32, 591, DateTimeKind.Local).AddTicks(7968),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 919, DateTimeKind.Unspecified).AddTicks(451), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 42L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "Adipisci vel enim sit rerum repudiandae nulla hic. Dolorem maxime nobis voluptas est architecto dolores impedit dignissimos. Eos nulla facilis velit ex provident. Et non nihil impedit aliquid ea.",
                            OldPrice = "R$117,90",
                            PreOrderAvailabilityStartDate = new DateTime(2019, 9, 19, 14, 12, 25, 285, DateTimeKind.Local).AddTicks(8733),
                            Price = "R$44,49",
                            ProductAvailable = true,
                            ProductCost = 0.2147039879181910m,
                            ProductLinksId = 0L,
                            ProductName = "Handcrafted Frozen Chips",
                            Published = true,
                            QuantityPerUnity = 86,
                            Ranking = 42,
                            SKU = "l395uavldpbe5fb6",
                            Slug = "earum-harum-fugiat",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Home",
                            UnitPrice = 62.3042290854753000m,
                            UnitSize = 2.8494691023833400m,
                            UnitWeight = 0.87555582117082353,
                            UnitsInStock = 1,
                            UnitsOnOrder = 2,
                            UpdatedOnUtc = new DateTime(2019, 9, 8, 21, 3, 21, 703, DateTimeKind.Local).AddTicks(6932),
                            VendorId = 42L
                        },
                        new
                        {
                            Id = 43L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 43L,
                            CategoryId = 43L,
                            CreatedAt = new DateTime(2019, 5, 15, 2, 6, 23, 675, DateTimeKind.Local).AddTicks(4062),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 919, DateTimeKind.Unspecified).AddTicks(917), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 43L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "Dignissimos aliquid sapiente dolor.",
                            OldPrice = "R$173,84",
                            PreOrderAvailabilityStartDate = new DateTime(2019, 12, 5, 21, 25, 32, 739, DateTimeKind.Local).AddTicks(6836),
                            Price = "R$26,52",
                            ProductAvailable = true,
                            ProductCost = 0.6528813455500090m,
                            ProductLinksId = 0L,
                            ProductName = "Licensed Fresh Shoes",
                            Published = true,
                            QuantityPerUnity = 34,
                            Ranking = 43,
                            SKU = "xhv3ojqgsi4vj6wh",
                            Slug = "provident-ab-harum",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Beauty",
                            UnitPrice = 17.981447800054000m,
                            UnitSize = 2.46457586179700m,
                            UnitWeight = 0.39454672643660882,
                            UnitsInStock = 3,
                            UnitsOnOrder = 9,
                            UpdatedOnUtc = new DateTime(2019, 9, 9, 7, 46, 40, 68, DateTimeKind.Local).AddTicks(177),
                            VendorId = 43L
                        },
                        new
                        {
                            Id = 44L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 44L,
                            CategoryId = 44L,
                            CreatedAt = new DateTime(2018, 10, 4, 14, 55, 20, 769, DateTimeKind.Local).AddTicks(8422),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 919, DateTimeKind.Unspecified).AddTicks(1169), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 44L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "eos",
                            OldPrice = "R$169,31",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 6, 2, 4, 12, 11, 387, DateTimeKind.Local).AddTicks(1437),
                            Price = "R$97,02",
                            ProductAvailable = true,
                            ProductCost = 0.8695881389405520m,
                            ProductLinksId = 0L,
                            ProductName = "Awesome Fresh Gloves",
                            Published = true,
                            QuantityPerUnity = 78,
                            Ranking = 44,
                            SKU = "pnl8spz5ccg5mwa8",
                            Slug = "omnis-quae-deserunt",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Movies",
                            UnitPrice = 37.2795286296306000m,
                            UnitSize = 9.1365276878404100m,
                            UnitWeight = 0.92152253627848002,
                            UnitsInStock = 0,
                            UnitsOnOrder = 8,
                            UpdatedOnUtc = new DateTime(2019, 9, 9, 3, 20, 20, 213, DateTimeKind.Local).AddTicks(849),
                            VendorId = 44L
                        },
                        new
                        {
                            Id = 45L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 45L,
                            CategoryId = 45L,
                            CreatedAt = new DateTime(2018, 11, 15, 12, 23, 12, 657, DateTimeKind.Local).AddTicks(2745),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 919, DateTimeKind.Unspecified).AddTicks(1425), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 45L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "Non accusantium molestiae beatae deserunt culpa nemo.",
                            OldPrice = "R$27,74",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 8, 12, 15, 53, 49, 438, DateTimeKind.Local).AddTicks(1869),
                            Price = "R$55,64",
                            ProductAvailable = true,
                            ProductCost = 0.3232463343642870m,
                            ProductLinksId = 0L,
                            ProductName = "Handmade Soft Soap",
                            Published = true,
                            QuantityPerUnity = 18,
                            Ranking = 45,
                            SKU = "ig7ltsq0ewfx6yuj",
                            Slug = "quibusdam-nostrum-libero",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Electronics",
                            UnitPrice = 48.706354363219000m,
                            UnitSize = 5.1181274303785200m,
                            UnitWeight = 0.53663965386182055,
                            UnitsInStock = 7,
                            UnitsOnOrder = 6,
                            UpdatedOnUtc = new DateTime(2019, 9, 9, 2, 16, 27, 692, DateTimeKind.Local).AddTicks(8911),
                            VendorId = 45L
                        },
                        new
                        {
                            Id = 46L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 46L,
                            CategoryId = 46L,
                            CreatedAt = new DateTime(2018, 12, 29, 0, 47, 23, 697, DateTimeKind.Local).AddTicks(5426),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 919, DateTimeKind.Unspecified).AddTicks(1678), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 46L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = @"Natus aut quis assumenda aut deleniti corrupti dolor inventore.
Error numquam eius officiis.
Quos nulla animi expedita aperiam.
Odit ut laudantium amet cumque excepturi libero dolores laboriosam sit.",
                            OldPrice = "R$102,52",
                            PreOrderAvailabilityStartDate = new DateTime(2019, 12, 7, 0, 49, 9, 82, DateTimeKind.Local).AddTicks(6504),
                            Price = "R$38,92",
                            ProductAvailable = true,
                            ProductCost = 0.5238828694093430m,
                            ProductLinksId = 0L,
                            ProductName = "Handcrafted Frozen Soap",
                            Published = true,
                            QuantityPerUnity = 74,
                            Ranking = 46,
                            SKU = "eof1jn0c03c90byc",
                            Slug = "saepe-saepe-voluptas",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Outdoors",
                            UnitPrice = 87.1993276230988000m,
                            UnitSize = 5.3782965314473500m,
                            UnitWeight = 0.15423408996045315,
                            UnitsInStock = 7,
                            UnitsOnOrder = 1,
                            UpdatedOnUtc = new DateTime(2019, 9, 8, 4, 37, 59, 576, DateTimeKind.Local).AddTicks(2394),
                            VendorId = 46L
                        },
                        new
                        {
                            Id = 47L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 47L,
                            CategoryId = 47L,
                            CreatedAt = new DateTime(2019, 6, 11, 1, 29, 46, 995, DateTimeKind.Local).AddTicks(2612),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 919, DateTimeKind.Unspecified).AddTicks(2073), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 47L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "vel",
                            OldPrice = "R$131,76",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 1, 12, 1, 24, 41, 432, DateTimeKind.Local).AddTicks(2457),
                            Price = "R$46,32",
                            ProductAvailable = true,
                            ProductCost = 0.355286775787960m,
                            ProductLinksId = 0L,
                            ProductName = "Practical Cotton Chips",
                            Published = true,
                            QuantityPerUnity = 28,
                            Ranking = 47,
                            SKU = "t0d9inknukzjwgrt",
                            Slug = "culpa-velit-ut",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Sports",
                            UnitPrice = 6.10771361091533000m,
                            UnitSize = 7.1532610418057400m,
                            UnitWeight = 0.18313758223463669,
                            UnitsInStock = 7,
                            UnitsOnOrder = 6,
                            UpdatedOnUtc = new DateTime(2019, 9, 8, 18, 7, 36, 748, DateTimeKind.Local).AddTicks(8558),
                            VendorId = 47L
                        },
                        new
                        {
                            Id = 48L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 48L,
                            CategoryId = 48L,
                            CreatedAt = new DateTime(2019, 8, 11, 21, 54, 33, 875, DateTimeKind.Local).AddTicks(6810),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 919, DateTimeKind.Unspecified).AddTicks(2328), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 48L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "Velit quod libero ut. Quisquam ducimus non. Est facere et itaque non dolore. Cupiditate et eaque. Consectetur qui rerum ut. Commodi et harum quia voluptate.",
                            OldPrice = "R$7,45",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 4, 13, 7, 8, 10, 697, DateTimeKind.Local).AddTicks(6214),
                            Price = "R$68,49",
                            ProductAvailable = true,
                            ProductCost = 0.6608568237446510m,
                            ProductLinksId = 0L,
                            ProductName = "Ergonomic Frozen Mouse",
                            Published = true,
                            QuantityPerUnity = 48,
                            Ranking = 48,
                            SKU = "u3uimeym867ltflp",
                            Slug = "aut-rerum-velit",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Toys",
                            UnitPrice = 20.3538313137152000m,
                            UnitSize = 1.92151094876300m,
                            UnitWeight = 0.18115461998672905,
                            UnitsInStock = 2,
                            UnitsOnOrder = 7,
                            UpdatedOnUtc = new DateTime(2019, 9, 9, 7, 54, 43, 815, DateTimeKind.Local).AddTicks(8075),
                            VendorId = 48L
                        },
                        new
                        {
                            Id = 49L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 49L,
                            CategoryId = 49L,
                            CreatedAt = new DateTime(2018, 12, 22, 10, 25, 1, 252, DateTimeKind.Local).AddTicks(9570),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 919, DateTimeKind.Unspecified).AddTicks(2776), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 49L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "Odit non deleniti quia reiciendis ullam saepe praesentium provident. Illum et tempore amet est possimus eos. Aut quod laborum dolorum impedit error ab et alias totam. Sunt ex nobis non dolor.",
                            OldPrice = "R$151,12",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 1, 31, 12, 46, 15, 764, DateTimeKind.Local).AddTicks(9936),
                            Price = "R$3,98",
                            ProductAvailable = true,
                            ProductCost = 0.4435835031064150m,
                            ProductLinksId = 0L,
                            ProductName = "Incredible Fresh Ball",
                            Published = true,
                            QuantityPerUnity = 82,
                            Ranking = 49,
                            SKU = "wiftrjzy4oxvqz0u",
                            Slug = "voluptatem-rerum-possimus",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Jewelery",
                            UnitPrice = 3.44242984589302000m,
                            UnitSize = 8.8743834145713500m,
                            UnitWeight = 0.092149143150145718,
                            UnitsInStock = 7,
                            UnitsOnOrder = 4,
                            UpdatedOnUtc = new DateTime(2019, 9, 8, 8, 18, 44, 297, DateTimeKind.Local).AddTicks(5422),
                            VendorId = 49L
                        },
                        new
                        {
                            Id = 50L,
                            AllowCustomerReview = false,
                            ApprovedRatingSum = 0,
                            ApprovedTotalReviews = 0,
                            AvailableForPreorder = false,
                            BrandId = 50L,
                            CategoryId = 50L,
                            CreatedAt = new DateTime(2019, 5, 27, 2, 53, 42, 361, DateTimeKind.Local).AddTicks(7437),
                            Discount = 0m,
                            DiscountAvailable = false,
                            HasDiscountApplied = false,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 919, DateTimeKind.Unspecified).AddTicks(3189), new TimeSpan(0, 0, 0, 0, 0)),
                            MediaId = 50L,
                            NotApprovedRatingSum = 0,
                            NotApprovedTotalReviews = 0,
                            NotReturnable = false,
                            Note = "eum",
                            OldPrice = "R$126,17",
                            PreOrderAvailabilityStartDate = new DateTime(2020, 3, 12, 9, 58, 42, 253, DateTimeKind.Local).AddTicks(8614),
                            Price = "R$41,68",
                            ProductAvailable = true,
                            ProductCost = 0.1546744635117590m,
                            ProductLinksId = 0L,
                            ProductName = "Licensed Plastic Sausages",
                            Published = true,
                            QuantityPerUnity = 98,
                            Ranking = 50,
                            SKU = "w5pbclhrp5h8w4ja",
                            Slug = "nihil-magni-odio",
                            Status = "Good",
                            StockTrackingIsEnabled = true,
                            TypeName = "Computers",
                            UnitPrice = 42.6539593574842000m,
                            UnitSize = 3.1347116982260300m,
                            UnitWeight = 0.16318879144414739,
                            UnitsInStock = 4,
                            UnitsOnOrder = 6,
                            UpdatedOnUtc = new DateTime(2019, 9, 9, 2, 6, 40, 492, DateTimeKind.Local).AddTicks(3522),
                            VendorId = 50L
                        });
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Common.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City")
                        .HasMaxLength(500);

                    b.Property<string>("Complement")
                        .HasMaxLength(250);

                    b.Property<string>("Country");

                    b.Property<string>("District");

                    b.Property<string>("FirstAddress")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset>("LastModified");

                    b.Property<string>("Number");

                    b.Property<long>("OwnerId");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(9);

                    b.Property<string>("SecondAddress")
                        .HasMaxLength(250);

                    b.Property<string>("State");

                    b.Property<string>("Street");

                    b.Property<string>("WhoReceives");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Customer.StormyCustomer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CPF")
                        .HasMaxLength(9);

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<long>("CustomerReviewsId");

                    b.Property<long>("CustomerWishlistId");

                    b.Property<long?>("DefaultBillingAddressId");

                    b.Property<long?>("DefaultShippingAddressId");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FullName")
                        .HasMaxLength(450);

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset>("LastModified");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("UserId");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("CustomerWishlistId")
                        .IsUnique();

                    b.HasIndex("DefaultBillingAddressId");

                    b.HasIndex("DefaultShippingAddressId");

                    b.ToTable("StormyCustomer");
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Customer.Wishlist", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CustomerId");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset>("LastModified");

                    b.HasKey("Id");

                    b.ToTable("Wishlist");
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Customer.WishlistItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AddedAt");

                    b.Property<bool>("Deleted");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset>("LastModified");

                    b.Property<int>("ProductId");

                    b.Property<long?>("ProductId1");

                    b.Property<long>("WishlistId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId1");

                    b.HasIndex("WishlistId");

                    b.ToTable("WishlistItem");
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Entity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("EntityId");

                    b.Property<string>("EntityTypeId")
                        .IsRequired()
                        .HasMaxLength(450);

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset>("LastModified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(450);

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.HasIndex("EntityTypeId");

                    b.ToTable("Entity");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            EntityId = 1L,
                            EntityTypeId = "Product",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 7, 23, 44, 9, 543, DateTimeKind.Unspecified).AddTicks(5136), new TimeSpan(0, -3, 0, 0, 0)),
                            Name = "Small Cotton Hat",
                            Slug = "non-magni-delectus"
                        },
                        new
                        {
                            Id = 2L,
                            EntityId = 1L,
                            EntityTypeId = "Product",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 8, 12, 20, 59, 425, DateTimeKind.Unspecified).AddTicks(9509), new TimeSpan(0, -3, 0, 0, 0)),
                            Name = "Unbranded Metal Bike",
                            Slug = "consequatur-nam-molestiae"
                        },
                        new
                        {
                            Id = 3L,
                            EntityId = 1L,
                            EntityTypeId = "Product",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 7, 23, 59, 34, 113, DateTimeKind.Unspecified).AddTicks(9983), new TimeSpan(0, -3, 0, 0, 0)),
                            Name = "Practical Metal Salad",
                            Slug = "quam-modi-rerum"
                        },
                        new
                        {
                            Id = 4L,
                            EntityId = 1L,
                            EntityTypeId = "Product",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 8, 0, 1, 23, 950, DateTimeKind.Unspecified).AddTicks(4744), new TimeSpan(0, -3, 0, 0, 0)),
                            Name = "Small Soft Pants",
                            Slug = "cum-impedit-fuga"
                        },
                        new
                        {
                            Id = 5L,
                            EntityId = 1L,
                            EntityTypeId = "Product",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 7, 18, 50, 58, 794, DateTimeKind.Unspecified).AddTicks(9318), new TimeSpan(0, -3, 0, 0, 0)),
                            Name = "Intelligent Metal Soap",
                            Slug = "porro-voluptatum-ipsa"
                        },
                        new
                        {
                            Id = 6L,
                            EntityId = 1L,
                            EntityTypeId = "Product",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 8, 1, 38, 16, 946, DateTimeKind.Unspecified).AddTicks(6883), new TimeSpan(0, -3, 0, 0, 0)),
                            Name = "Handmade Granite Hat",
                            Slug = "quia-repellat-est"
                        },
                        new
                        {
                            Id = 7L,
                            EntityId = 1L,
                            EntityTypeId = "Product",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 8, 20, 50, 26, 533, DateTimeKind.Unspecified).AddTicks(633), new TimeSpan(0, -3, 0, 0, 0)),
                            Name = "Tasty Fresh Shoes",
                            Slug = "iure-omnis-atque"
                        },
                        new
                        {
                            Id = 8L,
                            EntityId = 1L,
                            EntityTypeId = "Product",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 7, 2, 40, 34, 630, DateTimeKind.Unspecified).AddTicks(3585), new TimeSpan(0, -3, 0, 0, 0)),
                            Name = "Licensed Wooden Shirt",
                            Slug = "hic-laboriosam-consequatur"
                        },
                        new
                        {
                            Id = 9L,
                            EntityId = 1L,
                            EntityTypeId = "Product",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 6, 22, 53, 23, 740, DateTimeKind.Unspecified).AddTicks(3134), new TimeSpan(0, -3, 0, 0, 0)),
                            Name = "Handcrafted Concrete Pizza",
                            Slug = "quam-nisi-quidem"
                        },
                        new
                        {
                            Id = 10L,
                            EntityId = 1L,
                            EntityTypeId = "Product",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 7, 10, 6, 59, 356, DateTimeKind.Unspecified).AddTicks(4902), new TimeSpan(0, -3, 0, 0, 0)),
                            Name = "Small Metal Tuna",
                            Slug = "consectetur-rerum-aperiam"
                        });
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.EntityType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(450);

                    b.Property<string>("AreaName")
                        .HasMaxLength(450);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsMenuable");

                    b.Property<string>("RoutingAction")
                        .HasMaxLength(450);

                    b.Property<string>("RoutingController")
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.ToTable("EntityType");
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Media.Media", b =>
                {
                    b.Property<long>("Id");

                    b.Property<string>("Caption");

                    b.Property<string>("FileName");

                    b.Property<int>("FileSize");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset>("LastModified");

                    b.Property<int>("MediaType");

                    b.Property<string>("SeoFileName");

                    b.HasKey("Id");

                    b.ToTable("Media");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = 471510968,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 26, 1, 58, 5, 219, DateTimeKind.Unspecified).AddTicks(449), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 2L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -625983839,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 1, 19, 0, 2, 499, DateTimeKind.Unspecified).AddTicks(5673), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 3L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = 333507804,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 7, 20, 53, 49, 641, DateTimeKind.Unspecified).AddTicks(3050), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 4L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -1873580435,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 1, 18, 29, 49, 8, DateTimeKind.Unspecified).AddTicks(9532), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 5L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -727424194,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 28, 8, 20, 30, 142, DateTimeKind.Unspecified).AddTicks(5020), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 6L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -2021669936,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 4, 18, 55, 5, 553, DateTimeKind.Unspecified).AddTicks(5022), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 7L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -732655365,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 2, 4, 41, 51, 347, DateTimeKind.Unspecified).AddTicks(1550), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 8L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -692453031,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 30, 0, 39, 26, 566, DateTimeKind.Unspecified).AddTicks(2167), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 9L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = 1801307023,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 28, 15, 44, 32, 363, DateTimeKind.Unspecified).AddTicks(180), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 10L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = 316626617,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 3, 8, 4, 9, 92, DateTimeKind.Unspecified).AddTicks(383), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 11L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -1264734430,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 26, 3, 35, 23, 737, DateTimeKind.Unspecified).AddTicks(6164), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 12L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -1942048856,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 27, 18, 47, 28, 780, DateTimeKind.Unspecified).AddTicks(6250), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 13L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -594671186,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 8, 5, 33, 24, 17, DateTimeKind.Unspecified).AddTicks(1875), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 14L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -1445606272,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 4, 0, 55, 43, 575, DateTimeKind.Unspecified).AddTicks(9875), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 15L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -2030646440,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 3, 10, 52, 43, 519, DateTimeKind.Unspecified).AddTicks(2765), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 16L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = 122236656,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 28, 2, 37, 36, 230, DateTimeKind.Unspecified).AddTicks(9535), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 17L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = 1225582823,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 31, 13, 26, 18, 846, DateTimeKind.Unspecified).AddTicks(2099), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 18L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = 1072923031,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 27, 22, 42, 43, 546, DateTimeKind.Unspecified).AddTicks(9084), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 19L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = 92350989,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 31, 17, 44, 46, 553, DateTimeKind.Unspecified).AddTicks(9482), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 20L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -605189417,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 30, 5, 51, 28, 941, DateTimeKind.Unspecified).AddTicks(5704), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 21L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = 1513091595,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 30, 15, 32, 19, 811, DateTimeKind.Unspecified).AddTicks(8211), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 22L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = 1451929477,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 6, 23, 30, 29, 540, DateTimeKind.Unspecified).AddTicks(7942), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 23L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = 1131857972,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 29, 13, 52, 5, 678, DateTimeKind.Unspecified).AddTicks(2428), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 24L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -2060878840,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 26, 20, 22, 57, 333, DateTimeKind.Unspecified).AddTicks(3517), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 25L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -528168889,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 3, 2, 34, 18, 488, DateTimeKind.Unspecified).AddTicks(5124), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 26L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -282695610,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 28, 17, 17, 17, 453, DateTimeKind.Unspecified).AddTicks(1616), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 27L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = 678894843,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 1, 20, 48, 47, 41, DateTimeKind.Unspecified).AddTicks(713), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 28L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = 2063657694,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 26, 1, 36, 29, 982, DateTimeKind.Unspecified).AddTicks(4510), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 29L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -1721625985,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 3, 3, 13, 44, 289, DateTimeKind.Unspecified).AddTicks(2548), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 30L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -275607601,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 28, 3, 0, 42, 553, DateTimeKind.Unspecified).AddTicks(34), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 31L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -606887426,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 1, 20, 34, 7, 2, DateTimeKind.Unspecified).AddTicks(6484), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 32L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = 768884583,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 27, 7, 6, 37, 268, DateTimeKind.Unspecified).AddTicks(7628), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 33L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -1473902813,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 29, 15, 29, 46, 329, DateTimeKind.Unspecified).AddTicks(2540), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 34L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = 540893930,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 1, 9, 1, 57, 808, DateTimeKind.Unspecified).AddTicks(1421), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 35L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = 225239800,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 4, 3, 27, 16, 460, DateTimeKind.Unspecified).AddTicks(5711), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 36L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = 1424906684,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 3, 20, 5, 2, 151, DateTimeKind.Unspecified).AddTicks(8643), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 37L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = 945018751,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 1, 15, 33, 22, 437, DateTimeKind.Unspecified).AddTicks(7363), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 38L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -1684380823,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 30, 12, 58, 6, 608, DateTimeKind.Unspecified).AddTicks(9653), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 39L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -402365753,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 2, 21, 30, 19, 7, DateTimeKind.Unspecified).AddTicks(8495), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 40L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -1444882552,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 6, 5, 6, 49, 244, DateTimeKind.Unspecified).AddTicks(9366), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 41L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -1557697484,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 31, 21, 48, 52, 19, DateTimeKind.Unspecified).AddTicks(804), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 42L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -1924705078,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 30, 13, 26, 48, 370, DateTimeKind.Unspecified).AddTicks(9557), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 43L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -921539045,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 30, 3, 21, 17, 238, DateTimeKind.Unspecified).AddTicks(6943), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 44L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -1102749153,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 7, 10, 17, 16, 180, DateTimeKind.Unspecified).AddTicks(2170), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 45L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = 141938577,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 5, 9, 41, 6, 837, DateTimeKind.Unspecified).AddTicks(75), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 46L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -2072191706,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 26, 9, 53, 19, 909, DateTimeKind.Unspecified).AddTicks(362), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 47L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -1392325140,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 28, 5, 35, 9, 689, DateTimeKind.Unspecified).AddTicks(4515), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 48L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -107725463,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 26, 15, 10, 27, 511, DateTimeKind.Unspecified).AddTicks(4180), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 49L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = -693742117,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 8, 12, 28, 38, 715, DateTimeKind.Unspecified).AddTicks(3556), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        },
                        new
                        {
                            Id = 50L,
                            FileName = "http://lorempixel.com/640/480/fashion",
                            FileSize = 1792125534,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 5, 18, 46, 47, 825, DateTimeKind.Unspecified).AddTicks(4955), new TimeSpan(0, -3, 0, 0, 0)),
                            MediaType = 1
                        });
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Order.OrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset>("LastModified");

                    b.Property<string>("Price");

                    b.Property<string>("ProductName");

                    b.Property<int>("Quantity");

                    b.Property<long>("ShipmentId");

                    b.Property<long>("StormyOrderId");

                    b.Property<long>("StormyProductId");

                    b.HasKey("Id");

                    b.HasIndex("ShipmentId");

                    b.HasIndex("StormyOrderId");

                    b.HasIndex("StormyProductId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Payments.Payment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<DateTimeOffset>("CreatedOn");

                    b.Property<string>("FailureMessage");

                    b.Property<string>("GatewayTransactionId");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset>("LastModified");

                    b.Property<decimal>("PaymentFee");

                    b.Property<string>("PaymentMethod");

                    b.Property<int>("PaymentStatus");

                    b.Property<long>("StormyOrderId");

                    b.HasKey("Id");

                    b.HasIndex("StormyOrderId")
                        .IsUnique();

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Review", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset>("LastModified");

                    b.Property<int>("RatingLevel");

                    b.Property<string>("ReviewerName");

                    b.Property<long>("StormyCustomerId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("StormyCustomerId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Settings.AppSettings", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsVisibleInCommonSettingPage");

                    b.Property<string>("Module")
                        .HasMaxLength(450);

                    b.Property<string>("Value")
                        .HasMaxLength(450);

                    b.HasKey("Id");

                    b.ToTable("AppSettings");
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Shipment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("BillingAddressId");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<decimal>("DeliveryCost");

                    b.Property<DateTime>("DeliveryDate");

                    b.Property<long>("DestinationAddressId");

                    b.Property<decimal>("Diameter");

                    b.Property<decimal>("Height");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset>("LastModified");

                    b.Property<decimal>("Price");

                    b.Property<string>("ShipmentMethod");

                    b.Property<string>("ShipmentProviderName");

                    b.Property<DateTime>("ShippedDate");

                    b.Property<long>("StormyCustomerId");

                    b.Property<decimal>("TotalWeight");

                    b.Property<string>("TrackNumber")
                        .HasMaxLength(250);

                    b.Property<string>("UserId");

                    b.Property<string>("WhoReceives");

                    b.Property<decimal>("Width");

                    b.HasKey("Id");

                    b.HasIndex("BillingAddressId");

                    b.HasIndex("DestinationAddressId");

                    b.HasIndex("StormyCustomerId");

                    b.ToTable("Shipment");

                    b.HasData(
                        new
                        {
                            Id = 2L,
                            BillingAddressId = 0L,
                            Comment = "a single comment",
                            CreatedOn = new DateTime(2019, 9, 9, 1, 21, 49, 958, DateTimeKind.Utc).AddTicks(8757),
                            DeliveryCost = 22.29m,
                            DeliveryDate = new DateTime(2019, 9, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            DestinationAddressId = 0L,
                            Diameter = 0m,
                            Height = 0m,
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 9, 1, 21, 49, 958, DateTimeKind.Unspecified).AddTicks(8754), new TimeSpan(0, 0, 0, 0, 0)),
                            Price = 20.99m,
                            ShippedDate = new DateTime(2019, 9, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            StormyCustomerId = 0L,
                            TotalWeight = 0.400m,
                            TrackNumber = "0df2c052-bd92-4ef5-972b-d2a06bd8296f",
                            Width = 0m
                        });
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Shipping.ShipmentItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset>("LastModified");

                    b.Property<int>("OrderItemId");

                    b.Property<int>("Quantity");

                    b.Property<int>("ShipmentId");

                    b.Property<long?>("ShipmentId1");

                    b.HasKey("Id");

                    b.HasIndex("ShipmentId1");

                    b.ToTable("ShipmentItem");
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.StormyOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<long>("CustomerId");

                    b.Property<decimal>("DeliveryCost");

                    b.Property<DateTime>("DeliveryDate");

                    b.Property<decimal>("Discount");

                    b.Property<bool>("IsCancelled");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset>("LastModified");

                    b.Property<string>("Note")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("OrderDate");

                    b.Property<Guid>("OrderUniqueKey");

                    b.Property<DateTime?>("PaymentDate");

                    b.Property<long>("PaymentId");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(450);

                    b.Property<bool>("PickUpInStore");

                    b.Property<DateTime>("RequiredDate");

                    b.Property<long>("ShipmentId");

                    b.Property<DateTime>("ShippedDate");

                    b.Property<long?>("ShippingAddressId");

                    b.Property<string>("ShippingMethod");

                    b.Property<int>("ShippingStatus");

                    b.Property<int>("Status");

                    b.Property<decimal>("Tax");

                    b.Property<decimal>("TotalPrice");

                    b.Property<decimal>("TotalWeight");

                    b.Property<string>("TrackNumber");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ShipmentId");

                    b.HasIndex("ShippingAddressId");

                    b.ToTable("StormyOrder");
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Vendor.StormyVendor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AddressId");

                    b.Property<long?>("AddressId1");

                    b.Property<string>("CompanyName");

                    b.Property<string>("ContactTitle");

                    b.Property<string>("Email");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTimeOffset>("LastModified");

                    b.Property<string>("Logo");

                    b.Property<string>("Note");

                    b.Property<string>("Phone");

                    b.Property<string>("SizeUrl");

                    b.Property<string>("TypeGoods");

                    b.Property<string>("WebSite");

                    b.HasKey("Id");

                    b.HasIndex("AddressId1");

                    b.ToTable("StormyVendor");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AddressId = 0,
                            CompanyName = "Moreira, Carvalho and Martins",
                            ContactTitle = "Tommie.Nogueira83",
                            Email = "Tommie97@yahoo.com",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 7, 23, 30, 40, 955, DateTimeKind.Unspecified).AddTicks(9853), new TimeSpan(0, -3, 0, 0, 0)),
                            Logo = "https://loremflickr.com/320/240?lock=2123917279",
                            Note = @"Consequatur sed ducimus cum dolores laudantium cumque.
Sunt commodi qui sit autem et debitis dolores.",
                            Phone = "+55 (85) 8173-5459",
                            SizeUrl = "0",
                            TypeGoods = "Computers, Jewelery & Tools",
                            WebSite = "júlio.biz"
                        },
                        new
                        {
                            Id = 2L,
                            AddressId = 0,
                            CompanyName = "Macedo - Oliveira",
                            ContactTitle = "Marjorie8",
                            Email = "Marjorie39@gmail.com",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 7, 5, 3, 43, 765, DateTimeKind.Unspecified).AddTicks(5695), new TimeSpan(0, -3, 0, 0, 0)),
                            Logo = "https://loremflickr.com/320/240?lock=342631471",
                            Note = "Consectetur architecto eum sit molestiae at distinctio ut consequatur. Vero sit quos autem repellendus qui voluptatibus. Et excepturi adipisci fuga. Consequatur voluptatem perferendis.",
                            Phone = "+55 (93) 6512-8363",
                            SizeUrl = "0",
                            TypeGoods = "Toys, Electronics & Sports",
                            WebSite = "breno.net"
                        },
                        new
                        {
                            Id = 3L,
                            AddressId = 0,
                            CompanyName = "Nogueira e Associados",
                            ContactTitle = "Sylvester.Albuquerque",
                            Email = "Sylvester_Albuquerque56@bol.com.br",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 26, 0, 11, 35, 172, DateTimeKind.Unspecified).AddTicks(8789), new TimeSpan(0, -3, 0, 0, 0)),
                            Logo = "https://loremflickr.com/320/240?lock=352140114",
                            Note = "eum",
                            Phone = "(67) 39799-6845",
                            SizeUrl = "0",
                            TypeGoods = "Tools, Electronics & Beauty",
                            WebSite = "yuri.net"
                        },
                        new
                        {
                            Id = 4L,
                            AddressId = 0,
                            CompanyName = "Albuquerque - Moraes",
                            ContactTitle = "Brendan39",
                            Email = "Brendan.Melo@hotmail.com",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 25, 14, 57, 47, 837, DateTimeKind.Unspecified).AddTicks(8809), new TimeSpan(0, -3, 0, 0, 0)),
                            Logo = "https://loremflickr.com/320/240?lock=476183543",
                            Note = "Delectus earum eum et qui qui explicabo.",
                            Phone = "(89) 99747-1717",
                            SizeUrl = "0",
                            TypeGoods = "Games",
                            WebSite = "lorena.info"
                        },
                        new
                        {
                            Id = 5L,
                            AddressId = 0,
                            CompanyName = "Martins, Moreira and Silva",
                            ContactTitle = "Otis_Moraes36",
                            Email = "Otis98@gmail.com",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 29, 1, 13, 15, 434, DateTimeKind.Unspecified).AddTicks(1433), new TimeSpan(0, -3, 0, 0, 0)),
                            Logo = "https://loremflickr.com/320/240?lock=139736825",
                            Note = "Ab dicta corporis qui et est ducimus.",
                            Phone = "+55 (78) 8546-2918",
                            SizeUrl = "0",
                            TypeGoods = "Clothing & Electronics",
                            WebSite = "júlio césar.br"
                        },
                        new
                        {
                            Id = 6L,
                            AddressId = 0,
                            CompanyName = "Santos - Franco",
                            ContactTitle = "Adrienne.Reis",
                            Email = "Adrienne_Reis@hotmail.com",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 9, 5, 10, 48, 3, 871, DateTimeKind.Unspecified).AddTicks(3071), new TimeSpan(0, -3, 0, 0, 0)),
                            Logo = "https://loremflickr.com/320/240?lock=2023165179",
                            Note = "Sit voluptatum vero aut laborum quo. Consequatur odit quidem est aspernatur et expedita. Sapiente aspernatur saepe facilis rerum explicabo eveniet suscipit officiis error. Inventore sit corporis voluptatem. Tempora aut adipisci ut perspiciatis est laborum sit quis.",
                            Phone = "+55 (49) 3492-4307",
                            SizeUrl = "0",
                            TypeGoods = "Shoes",
                            WebSite = "marli.name"
                        },
                        new
                        {
                            Id = 7L,
                            AddressId = 0,
                            CompanyName = "Santos - Albuquerque",
                            ContactTitle = "Holly.Nogueira",
                            Email = "Holly.Nogueira21@bol.com.br",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 30, 21, 43, 59, 214, DateTimeKind.Unspecified).AddTicks(6228), new TimeSpan(0, -3, 0, 0, 0)),
                            Logo = "https://loremflickr.com/320/240?lock=594888452",
                            Note = "deserunt",
                            Phone = "(03) 4665-3852",
                            SizeUrl = "0",
                            TypeGoods = "Automotive",
                            WebSite = "janaína.br"
                        },
                        new
                        {
                            Id = 8L,
                            AddressId = 0,
                            CompanyName = "Reis S.A.",
                            ContactTitle = "Connie18",
                            Email = "Connie.Costa@gmail.com",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 27, 22, 42, 40, 547, DateTimeKind.Unspecified).AddTicks(6730), new TimeSpan(0, -3, 0, 0, 0)),
                            Logo = "https://loremflickr.com/320/240?lock=1834192405",
                            Note = "Minus eius ipsum nisi consequatur voluptatum voluptas. Beatae incidunt quas voluptas earum ducimus provident ut in ut. Corporis eos culpa. Rerum est a earum deleniti.",
                            Phone = "+55 (13) 3764-5286",
                            SizeUrl = "0",
                            TypeGoods = "Industrial",
                            WebSite = "isabela.info"
                        },
                        new
                        {
                            Id = 9L,
                            AddressId = 0,
                            CompanyName = "Moraes, Carvalho and Nogueira",
                            ContactTitle = "Pete_Reis1",
                            Email = "Pete88@live.com",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 19, 1, 10, 10, 781, DateTimeKind.Unspecified).AddTicks(9526), new TimeSpan(0, -3, 0, 0, 0)),
                            Logo = "https://loremflickr.com/320/240?lock=1437624520",
                            Note = "A similique quia neque dolorum accusantium ea dolore impedit.",
                            Phone = "(45) 43630-3534",
                            SizeUrl = "0",
                            TypeGoods = "Baby & Home",
                            WebSite = "fabrício.net"
                        },
                        new
                        {
                            Id = 10L,
                            AddressId = 0,
                            CompanyName = "Franco, Melo and Silva",
                            ContactTitle = "Garry_Carvalho73",
                            Email = "Garry_Carvalho74@yahoo.com",
                            IsDeleted = false,
                            LastModified = new DateTimeOffset(new DateTime(2019, 8, 20, 6, 44, 30, 113, DateTimeKind.Unspecified).AddTicks(326), new TimeSpan(0, -3, 0, 0, 0)),
                            Logo = "https://loremflickr.com/320/240?lock=2066227561",
                            Note = @"Delectus aliquam ea cum assumenda odio aspernatur.
Qui sint cupiditate reprehenderit.
Nisi impedit nobis voluptate autem magni.
Rerum necessitatibus eum illum dolorem molestiae sapiente.
Ut magnam eius sit et.",
                            Phone = "(08) 9533-3947",
                            SizeUrl = "0",
                            TypeGoods = "Beauty",
                            WebSite = "paulo.info"
                        });
                });

            modelBuilder.Entity("StormyCommerce.Infraestructure.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Catalog.Category", b =>
                {
                    b.HasOne("StormyCommerce.Core.Entities.Catalog.Category", "Parent")
                        .WithMany("Childrens")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Catalog.Product.ProductAttribute", b =>
                {
                    b.HasOne("StormyCommerce.Core.Entities.Catalog.Product.ProductAttributeGroup", "Group")
                        .WithMany("Attributes")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StormyCommerce.Core.Entities.Catalog.Product.StormyProduct")
                        .WithMany("ProductAttributes")
                        .HasForeignKey("StormyProductId");
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Catalog.Product.ProductAttributeValue", b =>
                {
                    b.HasOne("StormyCommerce.Core.Entities.Catalog.Product.ProductAttribute", "Attribute")
                        .WithMany()
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StormyCommerce.Core.Entities.Catalog.Product.StormyProduct", "Product")
                        .WithMany("AttributeValues")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Catalog.Product.ProductLink", b =>
                {
                    b.HasOne("StormyCommerce.Core.Entities.Catalog.Product.StormyProduct")
                        .WithMany("Links")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("StormyCommerce.Core.Entities.Catalog.Product.StormyProduct", "LinkedProduct")
                        .WithMany("LinkedProductLinks")
                        .HasForeignKey("LinkedProductId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("StormyCommerce.Core.Entities.Catalog.Product.StormyProduct", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Catalog.Product.ProductOptionValue", b =>
                {
                    b.HasOne("StormyCommerce.Core.Entities.Catalog.Product.ProductOption", "Option")
                        .WithMany()
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StormyCommerce.Core.Entities.Catalog.Product.StormyProduct", "Product")
                        .WithMany("OptionValues")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Catalog.Product.ProductTemplateProductAttribute", b =>
                {
                    b.HasOne("StormyCommerce.Core.Entities.Catalog.Product.ProductAttribute", "ProductAttribute")
                        .WithMany("ProductTemplates")
                        .HasForeignKey("ProductAttributeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StormyCommerce.Core.Entities.Catalog.Product.ProductTemplate", "ProductTemplate")
                        .WithMany("ProductAttributes")
                        .HasForeignKey("ProductTemplateId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Catalog.Product.StormyProduct", b =>
                {
                    b.HasOne("StormyCommerce.Core.Entities.Catalog.Product.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StormyCommerce.Core.Entities.Catalog.Category", "Category")
                        .WithOne()
                        .HasForeignKey("StormyCommerce.Core.Entities.Catalog.Product.StormyProduct", "CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StormyCommerce.Core.Entities.Vendor.StormyVendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Customer.StormyCustomer", b =>
                {
                    b.HasOne("StormyCommerce.Core.Entities.Customer.Wishlist", "CustomerWishlist")
                        .WithOne("Customer")
                        .HasForeignKey("StormyCommerce.Core.Entities.Customer.StormyCustomer", "CustomerWishlistId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StormyCommerce.Core.Entities.Common.Address", "DefaultBillingAddress")
                        .WithMany()
                        .HasForeignKey("DefaultBillingAddressId");

                    b.HasOne("StormyCommerce.Core.Entities.Common.Address", "DefaultShippingAddress")
                        .WithMany()
                        .HasForeignKey("DefaultShippingAddressId");
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Customer.WishlistItem", b =>
                {
                    b.HasOne("StormyCommerce.Core.Entities.Catalog.Product.StormyProduct", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId1");

                    b.HasOne("StormyCommerce.Core.Entities.Customer.Wishlist", "Wishlist")
                        .WithMany("WishlistItems")
                        .HasForeignKey("WishlistId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Entity", b =>
                {
                    b.HasOne("StormyCommerce.Core.Entities.EntityType", "EntityType")
                        .WithMany()
                        .HasForeignKey("EntityTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Media.Media", b =>
                {
                    b.HasOne("StormyCommerce.Core.Entities.Catalog.Product.StormyProduct")
                        .WithMany("Medias")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Order.OrderItem", b =>
                {
                    b.HasOne("StormyCommerce.Core.Entities.Shipment", "Shipment")
                        .WithMany()
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StormyCommerce.Core.Entities.StormyOrder", "Order")
                        .WithMany("Items")
                        .HasForeignKey("StormyOrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StormyCommerce.Core.Entities.Catalog.Product.StormyProduct", "Product")
                        .WithMany()
                        .HasForeignKey("StormyProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Payments.Payment", b =>
                {
                    b.HasOne("StormyCommerce.Core.Entities.StormyOrder", "Order")
                        .WithOne("Payment")
                        .HasForeignKey("StormyCommerce.Core.Entities.Payments.Payment", "StormyOrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Review", b =>
                {
                    b.HasOne("StormyCommerce.Core.Entities.Customer.StormyCustomer", "Author")
                        .WithMany("CustomerReviews")
                        .HasForeignKey("StormyCustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Shipment", b =>
                {
                    b.HasOne("StormyCommerce.Core.Entities.Common.Address", "BillingAddress")
                        .WithMany()
                        .HasForeignKey("BillingAddressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StormyCommerce.Core.Entities.Common.Address", "DestinationAddress")
                        .WithMany()
                        .HasForeignKey("DestinationAddressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StormyCommerce.Core.Entities.Customer.StormyCustomer", "Customer")
                        .WithMany()
                        .HasForeignKey("StormyCustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Shipping.ShipmentItem", b =>
                {
                    b.HasOne("StormyCommerce.Core.Entities.Shipment", "Shipment")
                        .WithMany("Items")
                        .HasForeignKey("ShipmentId1");
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.StormyOrder", b =>
                {
                    b.HasOne("StormyCommerce.Core.Entities.Customer.StormyCustomer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StormyCommerce.Core.Entities.Shipment", "Shipment")
                        .WithMany()
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StormyCommerce.Core.Entities.Common.Address", "ShippingAddress")
                        .WithMany()
                        .HasForeignKey("ShippingAddressId");
                });

            modelBuilder.Entity("StormyCommerce.Core.Entities.Vendor.StormyVendor", b =>
                {
                    b.HasOne("StormyCommerce.Core.Entities.Common.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId1");
                });
#pragma warning restore 612, 618
        }
    }
}
