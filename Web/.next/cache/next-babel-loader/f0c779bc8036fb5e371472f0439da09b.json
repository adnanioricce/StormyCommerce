{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danilo\\\\Documents\\\\GitHub\\\\WithoffStore\\\\Web\\\\components\\\\ColorSelector.jsx\";\nimport React from 'react';\nimport InteractiveElement from './InteractiveElement';\nimport Title from './Title';\n\nfunction ColorSelector({\n  options\n}) {\n  const [isPopupActive, setIsPopupActive] = React.useState(false);\n  const [activeColor, setActiveColor] = React.useState(options[0].color);\n  return React.createElement(React.Fragment, null, isPopupActive && React.createElement(ColorPopup, {\n    state: [isPopupActive, setIsPopupActive, activeColor, setActiveColor],\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), React.createElement(Title, {\n    label: \"Cor\",\n    style: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(InteractiveElement, {\n    className: \"color-selector\",\n    style: {\n      backgroundColor: activeColor\n    },\n    tag: \"div\",\n    onClick: () => {\n      setIsPopupActive(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }));\n}\n\nconst ColorPopup = ({\n  state,\n  options\n}) => {\n  const [isPopupActive, setIsPopupActive, activeColor, setActiveColor] = state;\n  return React.createElement(\"div\", {\n    className: \"color-popup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, options.map(({\n    value,\n    color\n  }, index) => {\n    const handleColorClick = () => {\n      setActiveColor(value);\n    };\n\n    return React.createElement(InteractiveElement, {\n      key: index,\n      className: color === activeColor ? 'color-popup-box selected' : 'color-popup-box',\n      style: {\n        backgroundColor: color\n      },\n      onClick: handleColorClick,\n      tag: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default ColorSelector;","map":{"version":3,"sources":["C:\\Users\\Danilo\\Documents\\GitHub\\WithoffStore\\Web\\components\\ColorSelector.jsx"],"names":["React","InteractiveElement","Title","ColorSelector","options","isPopupActive","setIsPopupActive","useState","activeColor","setActiveColor","color","backgroundColor","ColorPopup","state","map","value","index","handleColorClick"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,SAASC,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAoC;AAClC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,KAAK,CAACO,QAAN,CAAe,KAAf,CAA1C;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,KAAK,CAACO,QAAN,CAAeH,OAAO,CAAC,CAAD,CAAP,CAAWM,KAA1B,CAAtC;AACA,SACE,0CACGL,aAAa,IACZ,oBAAC,UAAD;AACE,IAAA,KAAK,EAAE,CAACA,aAAD,EAAgBC,gBAAhB,EAAkCE,WAAlC,EAA+CC,cAA/C,CADT;AAEE,IAAA,OAAO,EAAEL,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAOE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,KAAb;AAAmB,IAAA,KAAK,EAAE,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,oBAAC,kBAAD;AACE,IAAA,SAAS,EAAC,gBADZ;AAEE,IAAA,KAAK,EAAE;AAAEO,MAAAA,eAAe,EAAEH;AAAnB,KAFT;AAGE,IAAA,GAAG,EAAC,KAHN;AAIE,IAAA,OAAO,EAAE,MAAM;AACbF,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAmBD;;AACD,MAAMM,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAST,EAAAA;AAAT,CAAD,KAAwB;AACzC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,EAAkCE,WAAlC,EAA+CC,cAA/C,IAAiEI,KAAvE;AACA,SACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,OAAO,CAACU,GAAR,CAAY,CAAC;AAAEC,IAAAA,KAAF;AAASL,IAAAA;AAAT,GAAD,EAAmBM,KAAnB,KAA6B;AACxC,UAAMC,gBAAgB,GAAG,MAAM;AAC7BR,MAAAA,cAAc,CAACM,KAAD,CAAd;AACD,KAFD;;AAGA,WACE,oBAAC,kBAAD;AACE,MAAA,GAAG,EAAEC,KADP;AAEE,MAAA,SAAS,EACPN,KAAK,KAAKF,WAAV,GACI,0BADJ,GAEI,iBALR;AAOE,MAAA,KAAK,EAAE;AAAEG,QAAAA,eAAe,EAAED;AAAnB,OAPT;AAQE,MAAA,OAAO,EAAEO,gBARX;AASE,MAAA,GAAG,EAAC,KATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAaD,GAjBA,CADH,CADF;AAsBD,CAxBD;;AAyBA,eAAed,aAAf","sourcesContent":["import React from 'react';\r\nimport InteractiveElement from './InteractiveElement';\r\nimport Title from './Title';\r\n\r\nfunction ColorSelector({ options }) {\r\n  const [isPopupActive, setIsPopupActive] = React.useState(false);\r\n  const [activeColor, setActiveColor] = React.useState(options[0].color);\r\n  return (\r\n    <>\r\n      {isPopupActive && (\r\n        <ColorPopup\r\n          state={[isPopupActive, setIsPopupActive, activeColor, setActiveColor]}\r\n          options={options}\r\n        />\r\n      )}\r\n      <Title label=\"Cor\" style={{}}  />\r\n      <InteractiveElement\r\n        className=\"color-selector\"\r\n        style={{ backgroundColor: activeColor }}\r\n        tag=\"div\"\r\n        onClick={() => {\r\n          setIsPopupActive(true);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\nconst ColorPopup = ({ state, options }) => {\r\n  const [isPopupActive, setIsPopupActive, activeColor, setActiveColor] = state;\r\n  return (\r\n    <div className=\"color-popup\">\r\n      {options.map(({ value, color }, index) => {\r\n        const handleColorClick = () => {\r\n          setActiveColor(value);\r\n        };\r\n        return (\r\n          <InteractiveElement\r\n            key={index}\r\n            className={\r\n              color === activeColor\r\n                ? 'color-popup-box selected'\r\n                : 'color-popup-box'\r\n            }\r\n            style={{ backgroundColor: color }}\r\n            onClick={handleColorClick}\r\n            tag=\"div\"\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default ColorSelector;\r\n"]},"metadata":{},"sourceType":"module"}