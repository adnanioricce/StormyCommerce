{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(favoriteProduct),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchProducts),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchListAll),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(sagas);\n\nimport { all, takeLatest, put, call } from 'redux-saga/effects';\nimport actions, { consts } from '../actions';\nimport api from '../services/api';\n\nfunction favoriteProduct(_ref) {\n  var productID;\n  return _regeneratorRuntime.wrap(function favoriteProduct$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          productID = _ref.productID;\n          _context.next = 3;\n          return console.log(\"favoritando produto com id \".concat(productID));\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction fetchProducts() {\n  var allProducts;\n  return _regeneratorRuntime.wrap(function fetchProducts$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return call(api.get, 'http://localhost:5000/api/products');\n\n        case 2:\n          allProducts = _context2.sent;\n          _context2.next = 5;\n          return put(actions.setProducts(allProducts.data));\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction watchListAll() {\n  return _regeneratorRuntime.wrap(function watchListAll$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return takeLatest(consts.favorite, favoriteProduct);\n\n        case 2:\n          _context3.next = 4;\n          return takeLatest(consts.fetchProducts, fetchProducts);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction sagas() {\n  return _regeneratorRuntime.wrap(function sagas$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return all([watchListAll()]);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default sagas;","map":{"version":3,"sources":["C:\\Users\\Danilo\\Documents\\GitHub\\WithoffStore\\Web\\sagas\\index.js"],"names":["favoriteProduct","fetchProducts","watchListAll","sagas","all","takeLatest","put","call","actions","consts","api","productID","console","log","get","allProducts","setProducts","data","favorite"],"mappings":";;;;yBAIUA,e;;;yBAGAC,a;;;yBAIAC,Y;;;yBAIAC,K;;AAfV,SAASC,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,OAAP,IAAkBC,MAAlB,QAAgC,YAAhC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;AAEA,SAAUV,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4BW,UAAAA,SAA5B,QAA4BA,SAA5B;AAAA;AACE,iBAAMC,OAAO,CAACC,GAAR,sCAA0CF,SAA1C,EAAN;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA,SAAUV,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACsB,iBAAMM,IAAI,CAACG,GAAG,CAACI,GAAL,EAAU,oCAAV,CAAV;;AADtB;AACQC,UAAAA,WADR;AAAA;AAEE,iBAAMT,GAAG,CAACE,OAAO,CAACQ,WAAR,CAAoBD,WAAW,CAACE,IAAhC,CAAD,CAAT;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUf,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMG,UAAU,CAACI,MAAM,CAACS,QAAR,EAAkBlB,eAAlB,CAAhB;;AADF;AAAA;AAEE,iBAAMK,UAAU,CAACI,MAAM,CAACR,aAAR,EAAuBA,aAAvB,CAAhB;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUE,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMC,GAAG,CAAC,CAACF,YAAY,EAAb,CAAD,CAAT;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA,eAAeC,KAAf","sourcesContent":["import { all, takeLatest, put, call } from 'redux-saga/effects';\r\nimport actions, { consts } from '../actions';\r\nimport api from '../services/api';\r\n\r\nfunction* favoriteProduct({ productID }) {\r\n  yield console.log(`favoritando produto com id ${productID}`);\r\n}\r\nfunction* fetchProducts() {\r\n  const allProducts = yield call(api.get, 'http://localhost:5000/api/products');\r\n  yield put(actions.setProducts(allProducts.data));\r\n}\r\nfunction* watchListAll() {\r\n  yield takeLatest(consts.favorite, favoriteProduct);\r\n  yield takeLatest(consts.fetchProducts, fetchProducts);\r\n}\r\nfunction* sagas() {\r\n  yield all([watchListAll()]);\r\n}\r\nexport default sagas;\r\n"]},"metadata":{},"sourceType":"module"}