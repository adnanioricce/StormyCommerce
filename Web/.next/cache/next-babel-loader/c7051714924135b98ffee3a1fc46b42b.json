{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danilo\\\\Documents\\\\GitHub\\\\WithoffStore\\\\Web\\\\components\\\\Slide.jsx\";\nimport * as React from 'react';\nimport nextSlideSVG from '../static/assets/slides/nextSlide.svg';\nimport previousSlideSVG from '../static/assets/slides/previousSlide.svg';\nexport default (() => {\n  const [index, setIndex] = React.useState(2);\n  const imgRef = React.useRef();\n  const [images, setImages] = React.useState([0, 1, 2, 3, 4]);\n  const [slideWidth, setSlideWidth] = React.useState(0);\n  const [slides, setSlides] = React.useState(null);\n  const timer = React.useRef();\n  React.useEffect(() => {\n    const newSlides = images.map((e, eIndex) => React.createElement(\"div\", {\n      ref: imgRef,\n      key: e,\n      className: eIndex === index ? 'main image' : 'image',\n      onClick: () => {\n        setIndex(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: `/static/assets/slides/${e}.svg`,\n      alt: `Slide numero ${e}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })));\n    setSlides(newSlides);\n  }, [index, images]);\n  React.useEffect(() => {\n    if (imgRef.current) {\n      setSlideWidth(imgRef.current.offsetWidth);\n    }\n  });\n\n  function handleNextSlide() {\n    if (index <= images.length - 2) {\n      setIndex(index + 1);\n    }\n  }\n\n  function handlePreviousSlide() {\n    if (index !== 0) {\n      setIndex(index - 1);\n    }\n  }\n\n  React.useEffect(() => {\n    // setTimeout(()=>{\n    //   handleNextSlide()\n    // }, 500)\n    clearTimeout(timer.current);\n    timer.current = setTimeout(() => {\n      if (index <= images.length - 2) {\n        setIndex(index + 1);\n      } else {\n        setIndex(0);\n      }\n    }, 4000);\n    return () => clearTimeout(timer.current);\n  }, [index]); // const modifier = width<=425 ? 0 : (-0.12*slideWidth)\n\n  return React.createElement(\"div\", {\n    className: \"overflow-not-allower\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Slide\",\n    style: {\n      transform: `translateX(${index * slideWidth * -1}px)`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, slides), React.createElement(\"div\", {\n    className: \"slide-controller\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    onClick: handlePreviousSlide,\n    src: previousSlideSVG,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    onClick: handleNextSlide,\n    src: nextSlideSVG,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })));\n});","map":{"version":3,"sources":["C:\\Users\\Danilo\\Documents\\GitHub\\WithoffStore\\Web\\components\\Slide.jsx"],"names":["React","nextSlideSVG","previousSlideSVG","index","setIndex","useState","imgRef","useRef","images","setImages","slideWidth","setSlideWidth","slides","setSlides","timer","useEffect","newSlides","map","e","eIndex","current","offsetWidth","handleNextSlide","length","handlePreviousSlide","clearTimeout","setTimeout","transform"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport nextSlideSVG from '../static/assets/slides/nextSlide.svg';\r\nimport previousSlideSVG from '../static/assets/slides/previousSlide.svg';\r\n\r\nexport default () => {\r\n  const [index, setIndex] = React.useState(2);\r\n  const imgRef = React.useRef();\r\n  const [images, setImages] = React.useState([0, 1, 2, 3, 4]);\r\n  const [slideWidth, setSlideWidth] = React.useState(0);\r\n  const [slides, setSlides] = React.useState(null);\r\n  const timer = React.useRef();\r\n  React.useEffect(() => {\r\n    const newSlides = images.map((e, eIndex) => (\r\n      <div\r\n        ref={imgRef}\r\n        key={e}\r\n        className={eIndex === index ? 'main image' : 'image'}\r\n        onClick={() => {\r\n          setIndex(e);\r\n        }}\r\n      >\r\n        <img src={`/static/assets/slides/${e}.svg`} alt={`Slide numero ${e}`} />\r\n      </div>\r\n    ));\r\n    setSlides(newSlides);\r\n  }, [index, images]);\r\n  React.useEffect(() => {\r\n    if (imgRef.current) {\r\n      setSlideWidth(imgRef.current.offsetWidth);\r\n    }\r\n  });\r\n\r\n  function handleNextSlide() {\r\n    if (index <= images.length - 2) {\r\n      setIndex(index + 1);\r\n    }\r\n  }\r\n  function handlePreviousSlide() {\r\n    if (index !== 0) {\r\n      setIndex(index - 1);\r\n    }\r\n  }\r\n  React.useEffect(() => {\r\n    // setTimeout(()=>{\r\n    //   handleNextSlide()\r\n    // }, 500)\r\n    clearTimeout(timer.current);\r\n    timer.current = setTimeout(() => {\r\n      if (index <= images.length - 2) {\r\n        setIndex(index + 1);\r\n      } else {\r\n        setIndex(0);\r\n      }\r\n    }, 4000);\r\n    return () => clearTimeout(timer.current);\r\n  }, [index]);\r\n\r\n  // const modifier = width<=425 ? 0 : (-0.12*slideWidth)\r\n  return (\r\n    <div className=\"overflow-not-allower\">\r\n      <div\r\n        className=\"Slide\"\r\n        style={{ transform: `translateX(${index * slideWidth * -1}px)` }}\r\n      >\r\n        {slides}\r\n      </div>\r\n      <div className=\"slide-controller\">\r\n        <img onClick={handlePreviousSlide} src={previousSlideSVG} alt=\"\" />\r\n        <img onClick={handleNextSlide} src={nextSlideSVG} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}