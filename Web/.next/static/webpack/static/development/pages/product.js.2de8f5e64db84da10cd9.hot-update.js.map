{"version":3,"file":"static/webpack/static\\development\\pages\\product.js.2de8f5e64db84da10cd9.hot-update.js","sources":["webpack:///./components/ColorSelector.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useClickAway } from 'react-use';\r\nimport InteractiveElement from './InteractiveElement';\r\nimport Title from './Title';\r\n\r\nfunction ColorSelector({ options }) {\r\n  const [isPopupActive, setIsPopupActive] = React.useState(false);\r\n  const [activeColor, setActiveColor] = React.useState(options[0].color);\r\n  React.useEffect(() => {\r\n    if (isPopupActive && window) {\r\n      window.body.style.overflow = 'hidden';\r\n    } else if(window) {\r\n      window.body.style.overflow = 'auto';\r\n    }\r\n  }, [isPopupActive]);\r\n  return (\r\n    <>\r\n      {isPopupActive && (\r\n        <ColorPopup\r\n          state={[isPopupActive, setIsPopupActive, activeColor, setActiveColor]}\r\n          options={options}\r\n        />\r\n      )}\r\n      <Title label=\"Cor\" style={{ margin: '5px 0', fontSize: '10px' }} />\r\n      <InteractiveElement\r\n        className=\"color-selector\"\r\n        style={{ backgroundColor: activeColor }}\r\n        tag=\"div\"\r\n        onClick={() => {\r\n          setIsPopupActive(true);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\nconst ColorPopup = ({ state, options }) => {\r\n  const [isPopupActive, setIsPopupActive, activeColor, setActiveColor] = state;\r\n  const popupRef = React.useRef(null);\r\n  useClickAway(popupRef, () => {\r\n    setIsPopupActive(false);\r\n  });\r\n  return (\r\n    <div className=\"color-popup-overlay\">\r\n      <div className=\"color-popup\" ref={popupRef}>\r\n        <div className=\"color-popup-header\">\r\n          <Title\r\n            label=\"Selecione uma cor\"\r\n            style={{ color: 'white', fontSize: 10 }}\r\n          />\r\n        </div>\r\n        <div className=\"color-popup-body\">\r\n          {options.map(({ value, color }, index) => {\r\n            const handleColorClick = () => {\r\n              setActiveColor(value);\r\n              setIsPopupActive(false);\r\n            };\r\n            return (\r\n              <InteractiveElement\r\n                key={index}\r\n                className={\r\n                  color === activeColor\r\n                    ? 'color-popup-box selected'\r\n                    : 'color-popup-box'\r\n                }\r\n                style={{ backgroundColor: color }}\r\n                onClick={handleColorClick}\r\n                tag=\"div\"\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ColorSelector;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAKA;AAAA;AAAA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAKA;AACA;AAAA;;;;A","sourceRoot":""}